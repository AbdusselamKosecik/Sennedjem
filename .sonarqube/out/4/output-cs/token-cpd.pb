´
`E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\PersonService\IPersonService.cs
	namespace 	
Business
 
. 
Adapters 
. 
PersonService )
{ 
public 

	interface 
IPersonService #
{ 
Task 
< 
bool 
> 
	VerifyCid 
( 
long !

TCKimlikNo" ,
,, -
string. 4
Ad5 7
,7 8
string9 ?
Soyad@ E
,E F
intG J
	DogumYiliK T
)T U
;U V
} 
}		 Ï
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\PersonService\PersonServiceManager.cs
	namespace 	
Business
 
. 
Adapters 
. 
PersonService )
{ 
public 

class  
PersonServiceManager %
:& '
IPersonService( 6
{ 
public		 
async		 
Task		 
<		 
bool		 
>		 
	VerifyCid		  )
(		) *
long		* .

TCKimlikNo		/ 9
,		9 :
string		; A
Ad		B D
,		D E
string		F L
Soyad		M R
,		R S
int		T W
	DogumYili		X a
)		a b
{

 	
return 
await 
Verify 
(  

TCKimlikNo  *
,* +
Ad, .
,. /
Soyad0 5
,5 6
	DogumYili7 @
)@ A
;A B
} 	
private 
static 
async 
Task !
<! "
bool" &
>& '
Verify( .
(. /
long/ 3

TCKimlikNo4 >
,> ?
string@ F
AdG I
,I J
stringK Q
SoyadR W
,W X
intY \
	DogumYili] f
)f g
{ 	
var 
locale 
= 
new 
CultureInfo (
(( )
$str) 0
,0 1
false2 7
)7 8
;8 9
var 
svc 
= 
new 
KPSPublicSoapClient -
(- .
KPSPublicSoapClient. A
.A B!
EndpointConfigurationB W
.W X
KPSPublicSoapX e
)e f
;f g
{ 
var 
cmd 
= 
await 
svc  #
.# $"
TCKimlikNoDogrulaAsync$ :
(: ;

TCKimlikNo 
, 
Ad 
. 
ToUpper 
( 
locale #
)# $
.$ %
ToString% -
(- .
). /
,/ 0
Soyad 
. 
ToUpper 
(  
locale  &
)& '
.' (
ToString( 0
(0 1
)1 2
,2 3
	DogumYili 
) 
; 
return 
cmd 
. 
Body 
.  #
TCKimlikNoDogrulaResult  7
;7 8
} 
} 	
} 
} œ
ZE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\SmsService\ISmsService.cs
	namespace 	
Business
 
. 
Adapters 
. 

SmsService &
{ 
public 

	interface 
ISmsService  
{ 
Task 
< 
bool 
> 
Send 
( 
string 
password '
,' (
string) /
text0 4
,4 5
string6 <
	cellPhone= F
)F G
;G H
Task 
< 
bool 
> 
	SendAsist 
( 
string #
text$ (
,( )
string* 0
	cellPhone1 :
): ;
;; <
}		 
}

 ì
`E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\SmsService\SmsServiceManager.cs
	namespace 	
Business
 
. 
Adapters 
. 

SmsService &
{ 
public 

class 
SmsServiceManager "
:# $
ISmsService% 0
{ 
public 
async 
Task 
< 
bool 
> 
Send  $
($ %
string% +
password, 4
,4 5
string6 <
text= A
,A B
stringC I
	cellPhoneJ S
)S T
{		 	
Thread

 
.

 
Sleep

 
(

 
$num

 
)

 
;

 
return 
await 
Task 
. 

FromResult (
(( )
true) -
)- .
;. /
} 	
public 
async 
Task 
< 
bool 
> 
	SendAsist  )
() *
string* 0
text1 5
,5 6
string7 =
	cellPhone> G
)G H
{ 	
Thread 
. 
Sleep 
( 
$num 
) 
; 
return 
await 
Task 
. 

FromResult (
(( )
true) -
)- .
;. /
} 	
} 
} éÖ
ZE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\ActivityMonitor.cs
	namespace 	
Business
 
. 
BusinessAspects "
{		 
public 

class 
ActivityMonitor  
:! "
IActivityMonitor# 3
{ 
public 
class 
ActivitySlot !
{ 	
public 
string 
Action  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
Calls 
{ 
get "
;" #
set$ '
;' (
}) *
public 
long 

TotalMsecs "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
long 
AverageMsecs $
{% &
get' *
{+ ,
return- 3
Calls4 9
==: <
$num= >
?? @
$numA B
:C D

TotalMsecsE O
/P Q
CallsR W
;W X
}Y Z
}[ \
internal 
void 
Clear 
(  
)  !
{ 
Calls 
= 
$num 
; 

TotalMsecs 
= 
$num 
; 
} 
internal 
void 
Tick 
( 
int "
ticks# (
=) *
$num+ ,
,, -
long. 2
msecs3 8
=9 :
$num; <
)< =
{ 
Calls 
+= 
ticks 
; 

TotalMsecs 
+= 
msecs #
;# $
}   
}!! 	
public## 
class## 
ActivitySummary## $
{$$ 	
public%% 
IEnumerable%% 
<%% 
ActivitySlot%% +
>%%+ ,
Actions%%- 4
{%%5 6
get%%7 :
;%%: ;
set%%< ?
;%%? @
}%%A B
public&& 
IDictionary&& 
<&& 
string&& %
,&&% &
DateTime&&' /
>&&/ 0
Users&&1 6
{&&7 8
get&&9 <
;&&< =
set&&> A
;&&A B
}&&C D
public'' 
IDictionary'' 
<'' 
string'' %
,''% &
int''' *
>''* +

ByFacility'', 6
{''7 8
get''9 <
;''< =
set''> A
;''A B
}''C D
public(( 
IDictionary(( 
<(( 
string(( %
,((% &
int((' *
>((* +
UsersByHours((, 8
{((9 :
get((; >
;((> ?
set((@ C
;((C D
}((E F
public)) 
int)) 
DistinctUserCount)) (
{))) *
get))+ .
;)). /
set))0 3
;))3 4
}))5 6
}** 	
private,, 
readonly,,  
ConcurrentDictionary,, -
<,,- .
string,,. 4
,,,4 5
ActivitySlot,,6 B
[,,B C
],,C D
>,,D E
calls,,F K
=,,L M
new,,N Q 
ConcurrentDictionary,,R f
<,,f g
string,,g m
,,,m n
ActivitySlot,,o {
[,,{ |
],,| }
>,,} ~
(,,~ 
)	,, Ä
;
,,Ä Å
private.. 
readonly..  
ConcurrentDictionary.. -
<..- .
string... 4
,..4 5
DateTime..6 >
>..> ?
users..@ E
=..F G
new..H K 
ConcurrentDictionary..L `
<..` a
string..a g
,..g h
DateTime..i q
>..q r
(..r s
)..s t
;..t u
private// 
readonly// 
object// 
_lock//  %
=//& '
new//( +
object//, 2
(//2 3
)//3 4
;//4 5
private00 
DateTime00 

currentDay00 #
;00# $
private11 
readonly11 
string11 
	_category11  )
;11) *
private22 
readonly22 
string22 
	_fileName22  )
;22) *
private33 
int33 
currentHour33 
;33  
private44 
readonly44 
IDictionary44 $
<44$ %
int44% (
,44( )
int44* -
>44- .
UsersByHours44/ ;
=44< =
new44> A
SortedDictionary44B R
<44R S
int44S V
,44V W
int44X [
>44[ \
(44\ ]
)44] ^
;44^ _
private55 
readonly55 
ISet55 
<55 
string55 $
>55$ %
distinctUsers55& 3
=554 5
new556 9
HashSet55: A
<55A B
string55B H
>55H I
(55I J
)55J K
;55K L
public77 
ActivitySummary77 
	Summarize77 (
(77( )
)77) *
{88 	
var99 
result99 
=99 
new99 
ActivitySummary99 ,
(99, -
)99- .
;99. /
result;; 
.;; 
Actions;; 
=;; 
calls;; "
.;;" #
Select;;# )
(;;) *
c;;* +
=>;;, .
{<< 
var== 
slot== 
=== 
new== 
ActivitySlot== +
(==+ ,
)==, -
;==- .
slot>> 
.>> 
Action>> 
=>> 
c>> 
.>>  
Key>>  #
;>># $
foreach?? 
(?? 
var?? 
s?? 
in?? !
c??" #
.??# $
Value??$ )
)??) *
{@@ 
slotAA 
.AA 
TickAA 
(AA 
sAA 
.AA  
CallsAA  %
,AA% &
sAA' (
.AA( )

TotalMsecsAA) 3
)AA3 4
;AA4 5
}BB 
returnCC 
slotCC 
;CC 
}DD 
)DD 
.DD 
OrderByDescendingDD  
(DD  !
sDD! "
=>DD# %
sDD& '
.DD' (
CallsDD( -
)DD- .
;DD. /
resultFF 
.FF 
UsersFF 
=FF 
newFF 
ReadOnlyDictionaryFF 1
<FF1 2
stringFF2 8
,FF8 9
DateTimeFF: B
>FFB C
(FFC D
usersFFD I
)FFI J
;FFJ K
resultHH 
.HH 

ByFacilityHH 
=HH 
usersHH  %
.HH% &
GroupByHH& -
(HH- .
uHH. /
=>HH0 2
uHH3 4
.HH4 5
KeyHH5 8
.HH8 9
	SubstringHH9 B
(HHB C
$numHHC D
,HHD E
$numHHF G
)HHG H
)HHH I
.II 
ToDictionaryII 
(II 
gII 
=>II  
gII! "
.II" #
KeyII# &
,II& '
gII( )
=>II* ,
gII- .
.II. /
CountII/ 4
(II4 5
)II5 6
)II6 7
;II7 8
resultKK 
.KK 
UsersByHoursKK 
=KK  !
UsersByHoursKK" .
.KK. /
ToDictionaryKK/ ;
(KK; <
uKK< =
=>KK> @
uKKA B
.KKB C
KeyKKC F
.KKF G
ToStringKKG O
(KKO P
)KKP Q
,KKQ R
uKKS T
=>KKU W
uKKX Y
.KKY Z
ValueKKZ _
)KK_ `
;KK` a
resultLL 
.LL 
DistinctUserCountLL $
=LL% &
distinctUsersLL' 4
.LL4 5
CountLL5 :
;LL: ;
returnMM 
resultMM 
;MM 
}NN 	
publicPP 
ActivityMonitorPP 
(PP 
stringPP %
categoryPP& .
=PP/ 0
$strPP1 :
)PP: ;
{QQ 	
	_categoryRR 
=RR 
categoryRR  
;RR  !

currentDayUU 
=UU 
DateTimeUU !
.UU! "
TodayUU" '
;UU' (
currentHourVV 
=VV 
DateTimeVV "
.VV" #
NowVV# &
.VV& '
HourVV' +
;VV+ ,
	_fileNameWW 
=WW 
	AppDomainWW !
.WW! "
CurrentDomainWW" /
.WW/ 0
BaseDirectoryWW0 =
+WW> ?
$"WW@ B
Logs\\perf_WWB M
{WWM N
	_categoryWWN W
}WWW X
.csvWWX \
"WW\ ]
;WW] ^
}XX 	
privateZZ 
voidZZ 
ClearZZ 
(ZZ 
)ZZ 
{[[ 	
lock\\ 
(\\ 
_lock\\ 
)\\ 
{]] 
distinctUsers^^ 
.^^ 
Clear^^ #
(^^# $
)^^$ %
;^^% &
UsersByHours__ 
.__ 
Clear__ "
(__" #
)__# $
;__$ %
foreach`` 
(`` 
var`` 
	CallCount`` &
in``' )
calls``* /
.``/ 0
Values``0 6
)``6 7
foraa 
(aa 
varaa 
iaa 
=aa  
$numaa! "
;aa" #
iaa$ %
<aa& '
$numaa( *
;aa* +
iaa, -
++aa- /
)aa/ 0
	CallCountbb !
[bb! "
ibb" #
]bb# $
.bb$ %
Clearbb% *
(bb* +
)bb+ ,
;bb, -
}cc 
}dd 	
publicii 
voidii 
Tickii 
(ii 
stringii 

actionNameii  *
,ii* +
intii, /
ticksii0 5
=ii6 7
$numii8 9
,ii9 :
longii; ?
msecsii@ E
=iiF G
$numiiH I
,iiI J
stringiiK Q
userIdiiR X
=iiY Z
$strii[ ]
)ii] ^
{jj 	
varll 
	CallCountll 
=ll 
callsll !
.ll! "
GetOrAddll" *
(ll* +

actionNamell+ 5
,ll5 6
all7 8
=>ll9 ;
{mm 
varoo 
slotsoo 
=oo 
newoo 
ActivitySlotoo  ,
[oo, -
$numoo- /
]oo/ 0
;oo0 1
forpp 
(pp 
varpp 
ipp 
=pp 
$numpp 
;pp 
ipp  !
<pp" #
slotspp$ )
.pp) *
Lengthpp* 0
;pp0 1
ipp2 3
++pp3 5
)pp5 6
slotsqq 
[qq 
iqq 
]qq 
=qq 
newqq "
ActivitySlotqq# /
(qq/ 0
)qq0 1
;qq1 2
returnrr 
slotsrr 
;rr 
}ss 
)ss 
;ss 
	CallCounttt 
[tt 
DateTimett 
.tt 
Nowtt "
.tt" #
Hourtt# '
]tt' (
.tt( )
Ticktt) -
(tt- .
tickstt. 3
,tt3 4
msecstt5 :
)tt: ;
;tt; <
ifvv 
(vv 
!vv 
stringvv 
.vv 
IsNullOrEmptyvv %
(vv% &
userIdvv& ,
)vv, -
)vv- .
usersww 
.ww 
AddOrUpdateww !
(ww! "
userIdww" (
,ww( )
DateTimeww* 2
.ww2 3
Nowww3 6
,ww6 7
(ww8 9
uww9 :
,ww: ;
dww< =
)ww= >
=>ww? A
DateTimewwB J
.wwJ K
NowwwK N
)wwN O
;wwO P
lockxx 
(xx 
_lockxx 
)xx 
{yy 
ifzz 
(zz 

currentDayzz 
!=zz !
DateTimezz" *
.zz* +
Todayzz+ 0
)zz0 1
{{{ 
Save|| 
(|| 
)|| 
;|| 
Clear}} 
(}} 
)}} 
;}} 

currentDay 
=  
DateTime! )
.) *
Today* /
;/ 0
}
ÄÄ 
else
ÅÅ 
if
ÅÅ 
(
ÅÅ 
currentHour
ÅÅ $
!=
ÅÅ% '
DateTime
ÅÅ( 0
.
ÅÅ0 1
Now
ÅÅ1 4
.
ÅÅ4 5
Hour
ÅÅ5 9
)
ÅÅ9 :
{
ÇÇ 
UsersByHours
ÑÑ  
.
ÑÑ  !
Add
ÑÑ! $
(
ÑÑ$ %
currentHour
ÑÑ% 0
,
ÑÑ0 1
users
ÑÑ2 7
.
ÑÑ7 8
Count
ÑÑ8 =
)
ÑÑ= >
;
ÑÑ> ?
var
ÖÖ 
	threshold
ÖÖ !
=
ÖÖ" #
DateTime
ÖÖ$ ,
.
ÖÖ, -
Now
ÖÖ- 0
.
ÖÖ0 1
AddHours
ÖÖ1 9
(
ÖÖ9 :
-
ÖÖ: ;
$num
ÖÖ; <
)
ÖÖ< =
;
ÖÖ= >
var
áá 
expired
áá 
=
áá  !
users
áá" '
.
áá' (
Where
áá( -
(
áá- .
kv
áá. 0
=>
áá1 3
kv
áá4 6
.
áá6 7
Value
áá7 <
<
áá= >
	threshold
áá? H
)
ááH I
;
ááI J
DateTime
àà 
d
àà 
;
àà 
foreach
ââ 
(
ââ 
var
ââ  
e
ââ! "
in
ââ# %
expired
ââ& -
)
ââ- .
{
ää 
users
ãã 
.
ãã 
	TryRemove
ãã '
(
ãã' (
e
ãã( )
.
ãã) *
Key
ãã* -
,
ãã- .
out
ãã/ 2
d
ãã3 4
)
ãã4 5
;
ãã5 6
}
åå 
currentHour
çç 
=
çç  !
DateTime
çç" *
.
çç* +
Now
çç+ .
.
çç. /
Hour
çç/ 3
;
çç3 4
}
éé 
distinctUsers
èè 
.
èè 
Add
èè !
(
èè! "
userId
èè" (
)
èè( )
;
èè) *
}
êê 
}
ëë 	
public
ìì 
void
ìì 
Save
ìì 
(
ìì 
)
ìì 
{
îî 	
try
ïï 
{
ññ 
var
óó 
sb
óó 
=
óó 
new
óó 
StringBuilder
óó *
(
óó* +
)
óó+ ,
;
óó, -
var
òò 
date
òò 
=
òò 

currentDay
òò %
.
òò% &
ToString
òò& .
(
òò. /
$str
òò/ ;
)
òò; <
;
òò< =
foreach
ôô 
(
ôô 
var
ôô 
kv
ôô 
in
ôô  "
calls
ôô# (
)
ôô( )
{
öö 
for
õõ 
(
õõ 
var
õõ 
i
õõ 
=
õõ  
$num
õõ! "
;
õõ" #
i
õõ$ %
<
õõ& '
$num
õõ( *
;
õõ* +
i
õõ, -
++
õõ- /
)
õõ/ 0
{
úú 
sb
ûû 
.
ûû 
Append
ûû !
(
ûû! "
kv
ûû" $
.
ûû$ %
Key
ûû% (
)
ûû( )
;
ûû) *
sb
üü 
.
üü 
Append
üü !
(
üü! "
$char
üü" %
)
üü% &
;
üü& '
sb
†† 
.
†† 
Append
†† !
(
††! "
date
††" &
)
††& '
;
††' (
sb
°° 
.
°° 
AppendFormat
°° '
(
°°' (
$str
°°( <
,
°°< =
i
°°> ?
,
°°? @
kv
°°A C
.
°°C D
Value
°°D I
[
°°I J
i
°°J K
]
°°K L
.
°°L M
Calls
°°M R
,
°°R S
kv
°°T V
.
°°V W
Value
°°W \
[
°°\ ]
i
°°] ^
]
°°^ _
.
°°_ `
AverageMsecs
°°` l
)
°°l m
;
°°m n
sb
¢¢ 
.
¢¢ 

AppendLine
¢¢ %
(
¢¢% &
)
¢¢& '
;
¢¢' (
}
££ 
}
§§ 
using
¶¶ 
(
¶¶ 
var
¶¶ 
file
¶¶ 
=
¶¶  !
new
¶¶" %
System
¶¶& ,
.
¶¶, -
IO
¶¶- /
.
¶¶/ 0
StreamWriter
¶¶0 <
(
¶¶< =
	_fileName
¶¶= F
,
¶¶F G
true
¶¶H L
)
¶¶L M
)
¶¶M N
{
ßß 
file
®® 
.
®® 
Write
®® 
(
®® 
sb
®® !
.
®®! "
ToString
®®" *
(
®®* +
)
®®+ ,
)
®®, -
;
®®- .
}
©© 
}
™™ 
catch
´´ 
(
´´ 
	Exception
´´ 
ex
´´ 
)
´´  
{
¨¨ 
ex
≠≠ 
.
≠≠ 
ToString
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}
ØØ 	
}
∞∞ 
}≤≤ ë
[E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\IActivityMonitor.cs
	namespace 	
Business
 
. 
BusinessAspects "
{ 
public 

	interface 
IActivityMonitor %
{ 
void 
Save 
( 
) 
; 
ActivityMonitor 
. 
ActivitySummary '
	Summarize( 1
(1 2
)2 3
;3 4
void 
Tick 
( 
string 

actionName #
,# $
int% (
ticks) .
=/ 0
$num1 2
,2 3
long4 8
msecs9 >
=? @
$numA B
,B C
stringD J
userIdK Q
=R S
$strT V
)V W
;W X
} 
}		 ˝<
bE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\InstrumentationBehavior.cs
	namespace 	
Business
 
. 
BusinessAspects "
{ 
public 

class #
InstrumentationBehavior (
<( )
TRequest) 1
,1 2
	TResponse3 <
>< =
:> ?
IPipelineBehavior@ Q
<Q R
TRequestR Z
,Z [
	TResponse\ e
>e f
{ 
private 
readonly 
IActivityMonitor )
_monitor* 2
;2 3
private 
readonly 
ILogger  
logger! '
;' (
private 
readonly 

IPrincipal #
	principal$ -
;- .
private 
readonly 
IEnumerable $
<$ %

IValidator% /
</ 0
TRequest0 8
>8 9
>9 :

validators; E
;E F
public!! #
InstrumentationBehavior!! &
(!!& '
IActivityMonitor!!' 7
monitor!!8 ?
,!!? @
ILogger!!A H
<!!H I
TRequest!!I Q
>!!Q R
logger!!S Y
,!!Y Z

IPrincipal!![ e
	principal!!f o
,!!o p
IEnumerable##
 
<## 

IValidator##  
<##  !
TRequest##! )
>##) *
>##* +

validators##, 6
)##6 7
{$$ 	
_monitor%% 
=%% 
monitor%% 
;%% 
this&& 
.&& 
logger&& 
=&& 
logger&&  
;&&  !
this'' 
.'' 
	principal'' 
='' 
	principal'' &
;''& '
this(( 
.(( 

validators(( 
=(( 

validators(( (
;((( )
})) 	
	protected++ 
void++ 
Tick++ 
(++ 
string++ "

actionName++# -
,++- .
int++/ 2
ticks++3 8
=++9 :
$num++; <
,++< =
long++> B
msecs++C H
=++I J
$num++K L
)++L M
{,, 	
if-- 
(-- 
	principal-- 
!=-- 
null-- !
)--! "
_monitor.. 
... 
Tick.. 
(.. 

actionName.. (
,..( )
$num..* +
,..+ ,
msecs..- 2
,..2 3
$str..4 ;
+..< =
(..> ?
	principal..? H
...H I
Identity..I Q
...Q R
Name..R V
??..W Y
$str..Z ]
)..] ^
)..^ _
;.._ `
else// 
_monitor00 
.00 
Tick00 
(00 

actionName00 (
,00( )
$num00* +
,00+ ,
msecs00- 2
)002 3
;003 4
}11 	
public44 
async44 
Task44 
<44 
	TResponse44 #
>44# $
Handle44% +
(44+ ,
TRequest44, 4
request445 <
,44< =
CancellationToken44> O
cancellationToken44P a
,44a b"
RequestHandlerDelegate55
  
<55  !
	TResponse55! *
>55* +
next55, 0
)550 1
{66 	
Type77 
type77 
=77 
request77 
.77  
GetType77  '
(77' (
)77( )
;77) *
using88 
(88 
var88 
pr88 
=88 
new88 
Profiler88  (
(88( )
)88) *
)88* +
{99 
var:: 
	shortName:: 
=:: 
type::  $
.::$ %
ReflectedType::% 2
?::2 3
.::3 4
Name::4 8
+::9 :
$str::; >
+::? @
type::A E
.::E F
Name::F J
;::J K
pr<< 
.<< 
Begin<< 
(<< 
$str<< #
+<<$ %
type<<& *
.<<* +
FullName<<+ 3
)<<3 4
;<<4 5
try>> 
{?? 
varAA 
failuresAA  
=AA! "

validatorsAA# -
.BB 
SelectBB 
(BB 
vBB 
=>BB  "
vBB# $
.BB$ %
ValidateBB% -
(BB- .
requestBB. 5
)BB5 6
)BB6 7
.CC 

SelectManyCC !
(CC! "
resultCC" (
=>CC) +
resultCC, 2
.CC2 3
ErrorsCC3 9
)CC9 :
.DD 
WhereDD 
(DD 
fDD 
=>DD !
fDD" #
!=DD$ &
nullDD' +
)DD+ ,
.EE 
ToListEE 
(EE 
)EE 
;EE  
ifGG 
(GG 
failuresGG  
.GG  !
CountGG! &
>GG' (
$numGG) *
)GG* +
{HH 
varJJ 
arrJJ 
=JJ  !
failuresJJ" *
.JJ* +
SelectJJ+ 1
(JJ1 2
xJJ2 3
=>JJ4 6
$"JJ7 9
{JJ9 :
EnvironmentJJ: E
.JJE F
NewLineJJF M
}JJM N
 -- JJN R
{JJR S
xJJS T
.JJT U
PropertyNameJJU a
}JJa b
: JJb d
{JJd e
xJJe f
.JJf g
ErrorMessageJJg s
}JJs t
"JJt u
)JJu v
;JJv w
throwKK 
newKK !
ValidationExceptionKK" 5
(KK5 6
$strKK6 S
+KKT U
stringKKV \
.KK\ ]
JoinKK] a
(KKa b
stringKKb h
.KKh i
EmptyKKi n
,KKn o
arrKKp s
)KKs t
)KKt u
;KKu v
}LL 
varNN 
responseNN  
=NN! "
awaitNN# (
nextNN) -
(NN- .
)NN. /
;NN/ 0
prPP 
.PP 
EndPP 
(PP 
)PP 
;PP 
TickQQ 
(QQ 
	shortNameQQ "
,QQ" #
$numQQ$ %
,QQ% &
prQQ' )
.QQ) *
	LastMsecsQQ* 3
)QQ3 4
;QQ4 5
returnSS 
responseSS #
;SS# $
}TT 
catchUU 
(UU 
	ExceptionUU  
exUU! #
)UU# $
{VV 
prWW 
.WW 
EndWW 
(WW 
)WW 
;WW 
TickXX 
(XX 
	shortNameXX "
,XX" #
$numXX$ %
,XX% &
prXX' )
.XX) *
	LastMsecsXX* 3
)XX3 4
;XX4 5
varZZ 
sbZZ 
=ZZ 
newZZ  
StringBuilderZZ! .
(ZZ. /
)ZZ/ 0
;ZZ0 1
sb\\ 
.\\ 

AppendLine\\ !
(\\! "
request\\" )
.\\) *
GetType\\* 1
(\\1 2
)\\2 3
.\\3 4
Name\\4 8
)\\8 9
;\\9 :
sb]] 
.]] 

AppendLine]] !
(]]! "
JsonSerializer]]" 0
.]]0 1
	Serialize]]1 :
(]]: ;
request]]; B
)]]B C
)]]C D
;]]D E
sb`` 
.`` 

AppendLine`` !
(``! "
ex``" $
.``$ %
ToString``% -
(``- .
)``. /
)``/ 0
;``0 1
loggeraa 
.aa 
LogErroraa #
(aa# $
sbaa$ &
.aa& '
ToStringaa' /
(aa/ 0
)aa0 1
)aa1 2
;aa2 3
throwbb 
;bb 
}cc 
}dd 
}ee 	
}ff 
}hh §"
SE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\Profiler.cs
	namespace 	
Business
 
. 
BusinessAspects "
{ 
public 

sealed 
class 
Profiler  
:! "
IDisposable# .
{ 
private 
long 
lastTick 
; 
private 
long 
	lastDelta 
; 
private		 
string		 
lastBlockName		 $
;		$ %
public 
long 
	LastDelta 
{ 	
get 
{ 
return 
	lastDelta  
;  !
} 
} 	
public 
long 
	LastMsecs 
{ 	
get 
{ 
return 
	LastDelta  
/! "
$num# (
;( )
} 
} 	
public 
Profiler 
( 
) 
{ 	
} 	
public 
void 
Begin 
( 
string  
	blockName! *
,* +
string, 2
msg3 6
)6 7
{   	
if"" 
("" 
!"" 
string"" 
."" 
IsNullOrEmpty"" %
(""% &
lastBlockName""& 3
)""3 4
)""4 5
End## 
(## 
)## 
;## 
System$$ 
.$$ 
Diagnostics$$ 
.$$ 
Trace$$ $
.$$$ %
Indent$$% +
($$+ ,
)$$, -
;$$- .
lastBlockName%% 
=%% 
	blockName%% %
;%%% &
lastTick'' 
='' 
DateTime'' 
.''  
Now''  #
.''# $
Ticks''$ )
;'') *
Write(( 
((( 
$str(( 
,(( 
lastBlockName(( '
)((' (
;((( )
if)) 
()) 
!)) 
string)) 
.)) 
IsNullOrEmpty)) %
())% &
msg))& )
)))) *
)))* +
Write** 
(** 
msg** 
)** 
;** 
}++ 	
public-- 
void-- 
Begin-- 
(-- 
string--  
	blockName--! *
)--* +
{.. 	
Begin// 
(// 
	blockName// 
,// 
String// #
.//# $
Empty//$ )
)//) *
;//* +
}00 	
public22 
void22 
Write22 
(22 
string22  
format22! '
,22' (
params22) /
object220 6
[226 7
]227 8
args229 =
)22= >
{33 	
System44 
.44 
Diagnostics44 
.44 
Trace44 $
.44$ %
	WriteLine44% .
(44. /
string44/ 5
.445 6
Format446 <
(44< =
format44= C
,44C D
args44E I
)44I J
)44J K
;44K L
}55 	
public77 
void77 
End77 
(77 
string77 
msg77 "
)77" #
{88 	
	lastDelta99 
=99 
DateTime99  
.99  !
Now99! $
.99$ %
Ticks99% *
-99+ ,
lastTick99- 5
;995 6
Write:: 
(:: 
$str:: 
,::  
lastBlockName::! .
,::. /
	lastDelta::0 9
/::: ;
$num::< A
)::A B
;::B C
lastBlockName;; 
=;; 
String;; "
.;;" #
Empty;;# (
;;;( )
System<< 
.<< 
Diagnostics<< 
.<< 
Trace<< $
.<<$ %
Unindent<<% -
(<<- .
)<<. /
;<</ 0
}== 	
public?? 
void?? 
End?? 
(?? 
)?? 
{@@ 	
EndAA 
(AA 
StringAA 
.AA 
EmptyAA 
)AA 
;AA 
}BB 	
publicFF 
voidFF 
DisposeFF 
(FF 
)FF 
{GG 	
}HH 	
}KK 
}LL Ö
[E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\SecuredOperation.cs
	namespace 	
Business
 
. 
BusinessAspects "
." #
Autofac# *
{ 
public 

class 
SecuredOperation !
:" #
MethodInterception$ 6
{ 
private 
readonly  
IHttpContextAccessor - 
_httpContextAccessor. B
;B C
public 
SecuredOperation 
(  
)  !
{ 	 
_httpContextAccessor  
=! "
ServiceTool# .
.. /
ServiceProvider/ >
.> ?

GetService? I
<I J 
IHttpContextAccessorJ ^
>^ _
(_ `
)` a
;a b
} 	
	protected 
override 
void 
OnBefore  (
(( )
IInvocation) 4

invocation5 ?
)? @
{ 	
var 

roleClaims 
=  
_httpContextAccessor 1
.1 2
HttpContext2 =
.= >
User> B
.B C

ClaimRolesC M
(M N
)N O
;O P
var   
operationName   
=   

invocation    *
.  * +

TargetType  + 5
.  5 6
ReflectedType  6 C
.  C D
Name  D H
;  H I
if!! 
(!! 

roleClaims!! 
.!! 
Contains!! #
(!!# $
operationName!!$ 1
)!!1 2
)!!2 3
return"" 
;"" 
throw$$ 
new$$ 
SecurityException$$ '
($$' (
Messages$$( 0
.$$0 1 
AuthorizationsDenied$$1 E
)$$E F
;$$F G
}%% 	
}&& 
}'' Î	
NE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\CofigurationManager.cs
	namespace 	
Business
 
{ 
public 

class  
ConfigurationManager %
{ 
public		 
ApplicationMode		 
Mode		 #
{		$ %
get		& )
;		) *
private		+ 2
set		3 6
;		6 7
}		8 9
public  
ConfigurationManager #
(# $
IConfiguration$ 2
configuration3 @
,@ A
IHostEnvironmentB R
envS V
)V W
{ 	
Mode 
= 
( 
ApplicationMode #
)# $
Enum$ (
.( )
Parse) .
(. /
typeof/ 5
(5 6
ApplicationMode6 E
)E F
,F G
envH K
.K L
EnvironmentNameL [
)[ \
;\ ]
} 	
} 
public 

enum 
ApplicationMode 
{ 
Development 
, 
	Profiling 
, 
Staging 
, 

Production 
, 
} 
} °6
ME:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Constants\Messages.cs
	namespace 	
Business
 
. 
	Constants 
{ 
public 

static 
class 
Messages  
{ 
public 
static 
string  
OperationClaimExists 1
=>2 4
$str5 U
;U V
public		 
static		 
string		  
AuthorizationsDenied		 1
=>		2 4
$str		5 {
;		{ |
public 
static 
string 
Added "
=># %
$str& :
;: ;
public 
static 
string 
Deleted $
=>% '
$str( <
;< =
public 
static 
string 
Updated $
=>% '
$str( @
;@ A
public 
static 
string 
UserNotFound )
=>* ,
$str- u
;u v
public 
static 
string 
PasswordError *
=>+ -
$str. t
;t u
public 
static 
string 
SuccessfulLogin ,
=>- /
$str0 I
;I J
public 
static 
string 
UserAlreadyExists .
=>/ 1
$str2 N
;N O
public 
static 
string 
UserRegistered +
=>, .
$str/ P
;P Q
public 
static 
string 
SendMobileCode +
=>, .
$str/ ^
;^ _
public 
static 
string 
AccessTokenCreated /
=>0 2
$str3 X
;X Y
public 
static 
string 
NameAlreadyExist -
=>. 0
$str1 \
;\ ]
public 
static 
string 
StartsWithA (
=>) +
$str, R
;R S
public 
static 
string 
CIDAlreadyExist ,
=>- /
$str0 r
;r s
public 
static 
string 
WrongCID %
=>& (
$str) n
;n o
public 
static 
string 
PasswordEmpty *
=>+ -
$str. B
;B C
public 
static 
string 
PasswordLength +
=>, .
$str/ Z
;Z [
public 
static 
string #
PasswordUppercaseLetter 4
=>5 7
$str8 Y
;Y Z
public   
static   
string   #
PasswordLowercaseLetter   4
=>  5 7
$str  8 Y
;  Y Z
public!! 
static!! 
string!! 
PasswordDigit!! *
=>!!+ -
$str!!. J
;!!J K
public"" 
static"" 
string"" $
PasswordSpecialCharacter"" 5
=>""6 8
$str""9 U
;""U V
public## 
static## 
string## 
SendPassword## )
=>##* ,
$str##- \
;##\ ]
public$$ 
static$$ 
string$$ 
LimitedRecord$$ *
=>$$+ -
$str	$$. ï
;
$$ï ñ
public%% 
static%% 
string%% 
NoNeedForNeedCode%% .
=>%%/ 1
$str%%2 \
;%%\ ]
public&& 
static&& 
string&& 
InvalidCode&& (
=>&&) +
$str&&, H
;&&H I
public'' 
static'' 
string'' 
SmsServiceNotFound'' /
=>''0 2
$str''3 P
;''P Q
public(( 
static(( 
string(( 

IsCidValid(( '
=>((( *
$str((+ U
;((U V
public)) 
static)) 
string)) ,
 SmsServiceNotFoundForAppointment)) =
=>))> @
$str))A x
;))x y
public** 
static** 
string** &
RecordNotFoundInCidService** 7
=>**8 :
$str**; e
;**e f
public-- 
static-- 
string-- 

UserExists-- '
=>--( *
$str--+ H
;--H I
public.. 
static.. 
string.. 
WrongPassword.. *
=>..+ -
$str... <
;..< =
public// 
static// 
string// 
AuthorizationDenied// 0
=>//1 3
$str//4 O
;//O P
public11 
static11 
string11 
GroupClaimAdded11 ,
=>11- /
$str110 N
;11N O
public22 
static22 
string22 
GroupClaimUpdated22 .
=>22/ 1
$str222 T
;22T U
public33 
static33 
string33 
GroupClaimDeleted33 .
=>33/ 1
$str332 P
;33P Q
public55 
static55 
string55 
GroupDeleted55 )
=>55* ,
$str55- F
;55F G
public66 
static66 
string66 
GroupUpdated66 )
=>66* ,
$str66- J
;66J K
public77 
static77 
string77 

GroupAdded77 '
=>77( *
$str77+ D
;77D E
public99 
static99 
string99 
OperationClaimAdded99 0
=>991 3
$str994 W
;99W X
public:: 
static:: 
string:: !
OperationClaimUpdated:: 2
=>::3 5
$str::6 ]
;::] ^
public;; 
static;; 
string;; !
OperationClaimDeleted;; 2
=>;;3 5
$str;;6 Y
;;;Y Z
public== 
static== 
string== 
UserClaimCreated== -
=>==. 0
$str==1 N
;==N O
public>> 
static>> 
string>> 
UserClaimUpdated>> -
=>>>. 0
$str>>1 N
;>>N O
public?? 
static?? 
string?? 
UserClaimDeleted?? -
=>??. 0
$str??1 J
;??J K
publicAA 
staticAA 
stringAA 
UserGroupAddedAA +
=>AA, .
$strAA/ I
;AAI J
publicBB 
staticBB 
stringBB 
UserGroupUpdatedBB -
=>BB. 0
$strBB1 O
;BBO P
publicCC 
staticCC 
stringCC 
UserGroupDeletedCC -
=>CC. 0
$strCC1 O
;CCO P
}DD 
}EE í'
dE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\DependencyResolvers\AutofacBusinessModule.cs
	namespace 	
Business
 
. 
DependencyResolvers &
{ 
public 

class !
AutofacBusinessModule &
:' (
Module) /
{ 
private		 
readonly		  
ConfigurationManager		 -
configuration		. ;
;		; <
public !
AutofacBusinessModule $
($ %
)% &
{ 	
} 	
public !
AutofacBusinessModule $
($ % 
ConfigurationManager% 9
configuration: G
)G H
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
	protected 
override 
void 
Load  $
($ %
ContainerBuilder% 5
builder6 =
)= >
{ 	
var 
assembly 
= 
System !
.! "

Reflection" ,
., -
Assembly- 5
.5 6 
GetExecutingAssembly6 J
(J K
)K L
;L M
builder   
.   !
RegisterAssemblyTypes   )
(  ) *
assembly  * 2
)  2 3
.  3 4#
AsImplementedInterfaces  4 K
(  K L
)  L M
."" 
AsClosedTypesOf"" $
(""$ %
typeof""% +
(""+ ,
IRequestHandler"", ;
<""; <
,""< =
>""= >
)""> ?
)""? @
;""@ A
builder$$ 
.$$ !
RegisterAssemblyTypes$$ )
($$) *
assembly$$* 2
)$$2 3
.$$3 4#
AsImplementedInterfaces$$4 K
($$K L
)$$L M
.%% 
AsClosedTypesOf%%  
(%%  !
typeof%%! '
(%%' (

IValidator%%( 2
<%%2 3
>%%3 4
)%%4 5
)%%5 6
;%%6 7
switch'' 
('' 
configuration'' !
.''! "
Mode''" &
)''& '
{(( 
case)) 
ApplicationMode)) $
.))$ %
Development))% 0
:))0 1
builder** 
.** !
RegisterAssemblyTypes** 1
(**1 2
assembly**2 :
)**: ;
.**; <#
AsImplementedInterfaces**< S
(**S T
)**T U
.,, 
Where,, "
(,," #
t,,# $
=>,,% '
t,,( )
.,,) *
FullName,,* 2
.,,2 3

StartsWith,,3 =
(,,= >
$str,,> N
),,N O
),,O P
;-- 
break.. 
;.. 
case// 
ApplicationMode// $
.//$ %
	Profiling//% .
://. /
builder11 
.11 !
RegisterAssemblyTypes11 1
(111 2
assembly112 :
)11: ;
.11; <#
AsImplementedInterfaces11< S
(11S T
)11T U
.33 
Where33 "
(33" #
t33# $
=>33% '
t33( )
.33) *
FullName33* 2
.332 3

StartsWith333 =
(33= >
$str33> Y
)33Y Z
||33[ ]
t44 
.44 
FullName44 &
.44& '

StartsWith44' 1
(441 2
$str442 S
)44S T
)44T U
;55 
break66 
;66 
case77 
ApplicationMode77 $
.77$ %
Staging77% ,
:77, -
builder99 
.99 !
RegisterAssemblyTypes99 1
(991 2
assembly992 :
)99: ;
.99; <#
AsImplementedInterfaces99< S
(99S T
)99T U
.;; 
Where;; "
(;;" #
t;;# $
=>;;% '
t;;( )
.;;) *
FullName;;* 2
.;;2 3

StartsWith;;3 =
(;;= >
$str;;> Y
);;Y Z
||;;[ ]
t<< 
.<< 
FullName<< &
.<<& '

StartsWith<<' 1
(<<1 2
$str<<2 S
)<<S T
)<<T U
;== 
break>> 
;>> 
case?? 
ApplicationMode?? $
.??$ %

Production??% /
:??/ 0
builderAA 
.AA !
RegisterAssemblyTypesAA 1
(AA1 2
assemblyAA2 :
)AA: ;
.AA; <#
AsImplementedInterfacesAA< S
(AAS T
)AAT U
.CC$ %
WhereCC% *
(CC* +
tCC+ ,
=>CC- /
tCC0 1
.CC1 2
FullNameCC2 :
.CC: ;

StartsWithCC; E
(CCE F
$strCCF Y
)CCY Z
)CCZ [
;DD$ %
breakEE 
;EE 
defaultFF 
:FF 
breakGG 
;GG 
}HH 
}II 	
}JJ 
}KK À
KE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Fakes\IFakeStore.cs
	namespace 	
Business
 
. 
Fakes 
{ 
public 
	interface 

IFakeStore 
{ 
List 
< 
TEntity 
> 
Set 
< 
TEntity 
> 
( 
) 
; 
} 
}		 ‘
PE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Fakes\SFw\SFwInMemory.cs
	namespace 	
Business
 
. 
Fakes 
. 
SFw 
{ 
public 

sealed 
class 
SFwInMemory #
:$ %
ProjectDbContext& 6
{ 
public		 
SFwInMemory		 
(		 
DbContextOptions		 +
<		+ ,
SFwInMemory		, 7
>		7 8
options		9 @
,		@ A
IConfiguration		B P
configuration		Q ^
)		^ _
:		` a
base		b f
(		f g
options		g n
,		n o
configuration		p }
)		} ~
{

 	
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
if 
( 
! 
optionsBuilder 
.  
IsConfigured  ,
), -
{ 
base 
. 
OnConfiguring "
(" #
optionsBuilder# 1
.1 2
UseInMemoryDatabase2 E
(E F
configurationF S
.S T
GetConnectionStringT g
(g h
$strh u
)u v
)v w
)w x
;x y
} 
} 	
} 
} Ä
qE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\ForgotPasswordCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
[ 
SecuredOperation 
] 
public 

class !
ForgotPasswordCommand &
:' (
IRequest) 1
<1 2
IResult2 9
>9 :
{ 
public 
string 

TCKimlikNo  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
class (
ForgotPasswordCommandHandler 1
:2 3
IRequestHandler4 C
<C D!
ForgotPasswordCommandD Y
,Y Z
IResult[ b
>b c
{ 	
private 
readonly 
IUserRepository ,
_userDal- 5
;5 6
public (
ForgotPasswordCommandHandler /
(/ 0
IUserRepository0 ?
userDal@ G
)G H
{ 
_userDal 
= 
userDal "
;" #
}   
[// 
CacheRemoveAspect// 
(// 
$str// $
)//$ %
]//% &
[00 
	LogAspect00 
(00 
typeof00 
(00 
DbLogger00 &
)00& '
)00' (
]00( )
public11 
async11 
Task11 
<11 
IResult11 %
>11% &
Handle11' -
(11- .!
ForgotPasswordCommand11. C
request11D K
,11K L
CancellationToken11M ^
cancellationToken11_ p
)11p q
{22 
var33 
user33 
=33 
await33  
_userDal33! )
.33) *
GetAsync33* 2
(332 3
u333 4
=>335 7
u338 9
.339 :
	CitizenId33: C
==33D F
Convert33G N
.33N O
ToInt6433O V
(33V W
request33W ^
.33^ _

TCKimlikNo33_ i
)33i j
)33j k
;33k l
if55 
(55 
user55 
==55 
null55  
)55  !
return66 
new66 
ErrorResult66 *
(66* +
Messages66+ 3
.663 4
WrongCID664 <
)66< =
;66= >
var77 
generatedPassword77 %
=77& '
RandomPassword77( 6
.776 7 
CreateRandomPassword777 K
(77K L
$num77L N
)77N O
;77O P
HashingHelper88 
.88 
CreatePasswordHash88 0
(880 1
generatedPassword881 B
,88B C
out88D G
byte88H L
[88L M
]88M N
passwordSalt88O [
,88[ \
out88] `
byte88a e
[88e f
]88f g
passwordHash88h t
)88t u
;88u v
_userDal<< 
.<< 
Update<< 
(<<  
user<<  $
)<<$ %
;<<% &
return>> 
new>> 
SuccessResult>> (
(>>( )
Messages>>) 1
.>>1 2
SendPassword>>2 >
+>>? @
$str>>A P
+>>Q R
generatedPassword>>S d
+>>e f
$str>>g u
+>>v w
passwordHash	>>x Ñ
+
>>Ö Ü
$str
>>á ï
+
>>ñ ó
passwordSalt
>>ò §
)
>>§ •
;
>>• ¶
}?? 
}@@ 	
}AA 
}BB ¶ 
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\LoginUserQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
public 

class 
LoginUserQuery 
:  !
IRequest" *
<* +
IDataResult+ 6
<6 7
AccessToken7 B
>B C
>C D
{ 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
class !
LoginUserQueryHandler *
:+ ,
IRequestHandler- <
<< =
LoginUserQuery= K
,K L
IDataResultM X
<X Y
AccessTokenY d
>d e
>e f
{ 	
private 
readonly 
IUserRepository ,
_userDal- 5
;5 6
private 
readonly 
ITokenHelper )
_tokenHelper* 6
;6 7
public !
LoginUserQueryHandler (
(( )
IUserRepository) 8
userDal9 @
,@ A
ITokenHelperB N
tokenHelperO Z
)Z [
{ 
_userDal 
= 
userDal "
;" #
_tokenHelper 
= 
tokenHelper *
;* +
} 
public 
async 
Task 
< 
IDataResult )
<) *
AccessToken* 5
>5 6
>6 7
Handle8 >
(> ?
LoginUserQuery? M
requestN U
,U V
CancellationTokenW h
cancellationTokeni z
)z {
{ 
var 
user 
= 
await  
_userDal! )
.) *
GetAsync* 2
(2 3
u3 4
=>5 7
u8 9
.9 :
Email: ?
==@ B
requestC J
.J K
EmailK P
)P Q
;Q R
if!! 
(!! 
user!! 
==!! 
null!!  
)!!  !
return"" 
new"" 
ErrorDataResult"" .
<"". /
AccessToken""/ :
>"": ;
(""; <
Messages""< D
.""D E
UserNotFound""E Q
)""Q R
;""R S
if$$ 
($$ 
!$$ 
HashingHelper$$ "
.$$" #
VerifyPasswordHash$$# 5
($$5 6
request$$6 =
.$$= >
Password$$> F
,$$F G
user$$H L
.$$L M
PasswordSalt$$M Y
,$$Y Z
user$$[ _
.$$_ `
PasswordHash$$` l
)$$l m
)$$m n
return%% 
new%% 
ErrorDataResult%% .
<%%. /
AccessToken%%/ :
>%%: ;
(%%; <
Messages%%< D
.%%D E
PasswordError%%E R
)%%R S
;%%S T
var'' 
claims'' 
='' 
_userDal'' %
.''% &
	GetClaims''& /
(''/ 0
user''0 4
.''4 5
UserId''5 ;
)''; <
;''< =
var(( 
accessToken(( 
=((  !
_tokenHelper((" .
.((. /
CreateToken((/ :
<((: ;
SFwToken((; C
>((C D
(((D E
user((E I
,((I J
claims((K Q
)((Q R
;((R S
return** 
new** 
SuccessDataResult** ,
<**, -
AccessToken**- 8
>**8 9
(**9 :
accessToken**: E
,**E F
Messages**G O
.**O P
SuccessfulLogin**P _
)**_ `
;**` a
}++ 
},, 	
}-- 
}.. ı"
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\RegisterUser.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
public 

class 
RegisterUser 
{ 
[ 	
SecuredOperation	 
] 
public 
class 
Command 
: 
IRequest '
<' (
IResult( /
>/ 0
{ 	
public 
string 
Email 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Password "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
FullName "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 	
public 
class &
RegisterUserCommandHandler /
:0 1
IRequestHandler2 A
<A B
CommandB I
,I J
IResultK R
>R S
{ 	
private 
readonly 
IUserRepository ,
_userDal- 5
;5 6
public"" &
RegisterUserCommandHandler"" -
(""- .
IUserRepository"". =
userDal""> E
)""E F
{## 
_userDal$$ 
=$$ 
userDal$$ "
;$$" #
}%% 
[)) 
ValidationAspect)) 
()) 
typeof)) $
())$ %!
RegisterUserValidator))% :
))): ;
,)); <
Priority))= E
=))F G
$num))H I
)))I J
]))J K
[** 
CacheRemoveAspect** 
(** 
$str** $
)**$ %
]**% &
[++ 
	LogAspect++ 
(++ 
typeof++ 
(++ 

FileLogger++ (
)++( )
)++) *
]++* +
public,, 
async,, 
Task,, 
<,, 
IResult,, %
>,,% &
Handle,,' -
(,,- .
Command,,. 5
request,,6 =
,,,= >
CancellationToken,,? P
cancellationToken,,Q b
),,b c
{-- 
var.. 
	userExits.. 
=.. 
await..  %
_userDal..& .
.... /
GetAsync../ 7
(..7 8
u..8 9
=>..: <
u..= >
...> ?
Email..? D
==..E G
request..H O
...O P
Email..P U
)..U V
;..V W
if00 
(00 
	userExits00 
!=00  
null00! %
)00% &
return11 
new11 
ErrorResult11 *
(11* +
Messages11+ 3
.113 4
NameAlreadyExist114 D
)11D E
;11E F
HashingHelper44 
.44 
CreatePasswordHash44 0
(440 1
request441 8
.448 9
Password449 A
,44A B
out44C F
byte44G K
[44K L
]44L M
passwordSalt44N Z
,44Z [
out44\ _
byte44` d
[44d e
]44e f
passwordHash44g s
)44s t
;44t u
var55 
user55 
=55 
new55 
User55 #
{66 
Email77 
=77 
request77 #
.77# $
Email77$ )
,77) *
FullName99 
=99 
request99 &
.99& '
FullName99' /
,99/ 0
PasswordHash::  
=::! "
passwordHash::# /
,::/ 0
PasswordSalt;;  
=;;! "
passwordSalt;;# /
,;;/ 0
Status<< 
=<< 
true<< !
}== 
;== 
_userDal?? 
.?? 
Add?? 
(?? 
user?? !
)??! "
;??" #
await@@ 
_userDal@@ 
.@@ 
SaveChangesAsync@@ /
(@@/ 0
)@@0 1
;@@1 2
returnAA 
newAA 
SuccessResultAA (
(AA( )
MessagesAA) 1
.AA1 2
AddedAA2 7
)AA7 8
;AA8 9
}BB 
}CC 	
}DD 
}EE Œ
qE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\RegisterUserValidator.cs
	namespace 	
Business
 
. 
ValidationRules "
." #
FluentValidation# 3
{ 
public 

class !
RegisterUserValidator &
:' (
AbstractValidator) :
<: ;
RegisterUser; G
.G H
CommandH O
>O P
{ 
public !
RegisterUserValidator $
($ %
)% &
{ 	
RuleFor 
( 
p 
=> 
p 
. 
Password #
)# $
.$ %
Password% -
(- .
). /
;/ 0
} 	
} 
} ﬁ
qE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\RuleBuilderExtensions.cs
	namespace 	
Business
 
. 
ValidationRules "
." #
FluentValidation# 3
{ 
public 

static 
class !
RuleBuilderExtensions -
{ 
public 

static 
IRuleBuilder 
< 
T  
,  !
string" (
>( )
Password* 2
<2 3
T3 4
>4 5
(5 6
this6 :
IRuleBuilder; G
<G H
TH I
,I J
stringK Q
>Q R
ruleBuilderS ^
,^ _
int` c
minimumLengthd q
=r s
$numt u
)u v
{		 
var

 	
options


 
=

 
ruleBuilder

 
.
 
NotEmpty 
( 
) 
. 
WithMessage !
(! "
Messages" *
.* +
PasswordEmpty+ 8
)8 9
.
 
MinimumLength 
( 
minimumLength &
)& '
.' (
WithMessage( 3
(3 4
Messages4 <
.< =
PasswordLength= K
)K L
.
 
Matches 
( 
$str 
) 
. 
WithMessage '
(' (
Messages( 0
.0 1#
PasswordUppercaseLetter1 H
)H I
.
 
Matches 
( 
$str 
) 
. 
WithMessage '
(' (
Messages( 0
.0 1#
PasswordLowercaseLetter1 H
)H I
.
 
Matches 
( 
$str 
) 
. 
WithMessage '
(' (
Messages( 0
.0 1
PasswordDigit1 >
)> ?
.
 
Matches 
( 
$str !
)! "
." #
WithMessage# .
(. /
Messages/ 7
.7 8$
PasswordSpecialCharacter8 P
)P Q
;Q R
return 
options 
; 
} 
} 
} ú
eE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\LoginUserValidator.cs
	namespace 	
Business
 
. 
ValidationRules "
." #
FluentValidation# 3
{ 
public 

class 
LoginUserValidator #
:$ %
AbstractValidator& 7
<7 8
LoginUserCommand8 H
>H I
{ 
public 
LoginUserValidator !
(! "
)" #
{ 	
RuleFor 
( 
m 
=> 
m 
. 
Password #
)# $
.$ %
NotEmpty% -
(- .
). /
. 
When 
( 
( 
i 
) 
=> 
i 
. 
Provider %
!=& (&
AuthenticationProviderType) C
.C D
PersonD J
)J K
;K L
RuleFor 
( 
m 
=> 
m 
. 
ExternalUserId )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
.5 6
Must6 :
(: ;
(; <
instance< D
,D E
valueF K
)K L
=>M O
{ 
switch 
( 
instance  
.  !
Provider! )
)) *
{ 
case &
AuthenticationProviderType 3
.3 4
Person4 :
:: ;
return 
value $
.$ %

IsCidValid% /
(/ 0
)0 1
;1 2
case &
AuthenticationProviderType 3
.3 4
Staff4 9
:9 :
return 
true #
;# $
case   &
AuthenticationProviderType   3
.  3 4
Agent  4 9
:  9 :
break!! 
;!! 
default"" 
:"" 
break## 
;## 
}$$ 
return%% 
false%% 
;%% 
}&& 
)&& 
.'' 
WithMessage'' 
('' 
$str'' ?
)''? @
.((  
OverridePropertyName(( !
(((! "
$str((" -
)((- .
;((. /
})) 	
}** 
},, £
gE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\MobileLoginValidator.cs
	namespace 	
Business
 
. 
ValidationRules "
." #
FluentValidation# 3
{ 
public 
class	  
MobileLoginValidator #
:$ %
AbstractValidator& 7
<7 8
VerifyOTPCommand8 H
>H I
{		 
public

 
 
MobileLoginValidator

 
(

  
)

  !
{ 
RuleFor 
( 
p 
=> 
p 
. 
ExternalUserId #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
m 
=> 
m 
. 
Code 
) 
. 
Must 
(  
(  !
instance! )
,) *
value+ 0
)0 1
=>2 4
{ 
switch 
( 
instance 
. 
Provider !
)! "
{ 	
case
 &
AuthenticationProviderType )
.) *
Person* 0
:0 1
return 
value 
> 
$num 
; 
case
 &
AuthenticationProviderType )
.) *
Staff* /
:/ 0
return 
value 
> 
$num 
; 
case
 &
AuthenticationProviderType )
.) *
Agent* /
:/ 0
return 
value 
== 
$num 
; 
default
 
: 
break 
; 
} 	
return 
false 
; 
} 
) 
. 
WithMessage 
( 
$str  
)  !
;! "
} 
} 
}   Á
kE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Queries\LoginUserHandler.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
Authorizations		 *
.		* +
Queries		+ 2
{

 
public 
class 
LoginUserHandler 
:  
IRequestHandler! 0
<0 1
LoginUserCommand1 A
,A B
IDataResultC N
<N O
LoginUserResultO ^
>^ _
>_ `
{ 
private 	
readonly
 &
IAuthenticationCoordinator -
coordinator. 9
;9 :
public 
LoginUserHandler	 
( &
IAuthenticationCoordinator 4
coordinator5 @
)@ A
{ 
this 
. 
coordinator 
= 
coordinator !
;! "
} 
[ 
ValidationAspect 
( 
typeof 
( 
LoginUserValidator -
)- .
,. /
Priority0 8
=9 :
$num; <
)< =
]= >
public 
async	 
Task 
< 
IDataResult 
<  
LoginUserResult  /
>/ 0
>0 1
Handle2 8
(8 9
LoginUserCommand9 I
requestJ Q
,Q R
CancellationTokenS d
cancellationTokene v
)v w
{ 
var   
provider   
=   
coordinator   
.   
SelectProvider   ,
(  , -
request  - 4
.  4 5
Provider  5 =
)  = >
;  > ?
return!! 	
new!!
 
SuccessDataResult!! 
<!!  
LoginUserResult!!  /
>!!/ 0
(!!0 1
await!!1 6
provider!!7 ?
.!!? @
Login!!@ E
(!!E F
request!!F M
)!!M N
)!!N O
;!!O P
}"" 
}## 
}$$ ﬂ
kE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Queries\VerifyOTPHandler.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Queries+ 2
{ 
public

 

class

 
VerifyOTPHandler

 !
:

" #
IRequestHandler

$ 3
<

3 4
VerifyOTPCommand

4 D
,

D E
IDataResult

F Q
<

Q R
SFwToken

R Z
>

Z [
>

[ \
{ 
private 
readonly &
IAuthenticationCoordinator 3
coordinator4 ?
;? @
public 
VerifyOTPHandler 
(  &
IAuthenticationCoordinator  :
coordinator; F
)F G
{ 	
this 
. 
coordinator 
= 
coordinator *
;* +
} 	
public 
async 
Task 
< 
IDataResult %
<% &
SFwToken& .
>. /
>/ 0
Handle1 7
(7 8
VerifyOTPCommand8 H
requestI P
,P Q
CancellationTokenR c
cancellationTokend u
)u v
{ 	
var 
provider 
= 
coordinator &
.& '
SelectProvider' 5
(5 6
request6 =
.= >
Provider> F
)F G
;G H
return 
await 
provider !
.! "
Verify" (
(( )
request) 0
)0 1
;1 2
}   	
}!! 
}"" É
pE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Commands\CreateGroupClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Commands		( 0
{

 
public 
class	 #
CreateGroupClaimCommand &
:' (
IRequest) 1
<1 2
IResult2 9
>9 :
{ 
public 

string 
	ClaimName 
{ 
get !
;! "
set# &
;& '
}( )
public 

class *
CreateGroupClaimCommandHandler /
:0 1
IRequestHandler2 A
<A B#
CreateGroupClaimCommandB Y
,Y Z
IResult[ b
>b c
{ 
private 
readonly %
IOperationClaimRepository 0
_operationClaimDal1 C
;C D
public *
CreateGroupClaimCommandHandler +
(+ ,%
IOperationClaimRepository, E
operationClaimDalF W
)W X
{ 
_operationClaimDal 
= 
operationClaimDal .
;. /
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' (#
CreateGroupClaimCommand( ?
request@ G
,G H
CancellationTokenI Z
cancellationToken[ l
)l m
{ 
if 

( 
IsClaimExists 
( 
request !
.! "
	ClaimName" +
)+ ,
), -
return
 
new 
ErrorResult  
(  !
Messages! )
.) * 
OperationClaimExists* >
)> ?
;? @
var 
operationClaim 
= 
new  
OperationClaim! /
{ 	
Name  
 
=   
request   
.   
	ClaimName   "
}!! 	
;!!	 

_operationClaimDal"" 
."" 
Add"" 
("" 
operationClaim"" -
)""- .
;"". /
await## 
_operationClaimDal##  
.##  !
SaveChangesAsync##! 1
(##1 2
)##2 3
;##3 4
return%% 
new%% 
SuccessResult%%  
(%%  !
Messages%%! )
.%%) *
OperationClaimAdded%%* =
)%%= >
;%%> ?
}&& 
private'' 
bool'' 
IsClaimExists''  
(''  !
string''! '
	claimName''( 1
)''1 2
{(( 
return)) 
_operationClaimDal)) !
.))! "
Get))" %
())% &
x))& '
=>))( *
x))+ ,
.)), -
Name))- 1
==))2 4
	claimName))5 >
)))> ?
is))@ B
null))C G
?))H I
false))J O
:))P Q
true))R V
;))V W
}** 
}++ 
},, 
}-- ¶
pE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Commands\DeleteGroupClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Commands		( 0
{

 
[ 
SecuredOperation 
] 
public 

class #
DeleteGroupClaimCommand (
:) *
IRequest+ 3
<3 4
IResult4 ;
>; <
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class *
DeleteGroupClaimCommandHandler 3
:4 5
IRequestHandler6 E
<E F#
DeleteGroupClaimCommandF ]
,] ^
IResult_ f
>f g
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public *
DeleteGroupClaimCommandHandler 1
(1 2!
IGroupClaimRepository2 G
groupClaimDalH U
)U V
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .#
DeleteGroupClaimCommand. E
requestF M
,M N
CancellationTokenO `
cancellationTokena r
)r s
{ 
var 
groupClaimToDelete &
=' (
await) .
_groupClaimDal/ =
.= >
GetAsync> F
(F G
xG H
=>I K
xL M
.M N
GroupIdN U
==V X
requestY `
.` a
Ida c
)c d
;d e
_groupClaimDal 
. 
Delete %
(% &
groupClaimToDelete& 8
)8 9
;9 :
await 
_groupClaimDal $
.$ %
SaveChangesAsync% 5
(5 6
)6 7
;7 8
return   
new   
SuccessResult   (
(  ( )
Messages  ) 1
.  1 2
GroupClaimDeleted  2 C
)  C D
;  D E
}!! 
}"" 	
}## 
}$$ ©
pE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Commands\UpdateGroupClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Commands		( 0
{

 
public 

class #
UpdateGroupClaimCommand (
:) *
IRequest+ 3
<3 4
IResult4 ;
>; <
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
GroupId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
ClaimId 
{ 
get  
;  !
set" %
;% &
}' (
public 
class *
UpdateGroupClaimCommandHandler 3
:4 5
IRequestHandler6 E
<E F#
UpdateGroupClaimCommandF ]
,] ^
IResult_ f
>f g
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public *
UpdateGroupClaimCommandHandler 1
(1 2!
IGroupClaimRepository2 G
groupClaimDalH U
)U V
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .#
UpdateGroupClaimCommand. E
requestF M
,M N
CancellationTokenO `
cancellationTokena r
)r s
{ 
var 
entityToUpdate "
=# $
new% (

GroupClaim) 3
{ 
ClaimId 
= 
request %
.% &
ClaimId& -
,- .
GroupId 
= 
request %
.% &
GroupId& -
,- .
} 
; 
_groupClaimDal   
.   
Update   %
(  % &
entityToUpdate  & 4
)  4 5
;  5 6
await!! 
_groupClaimDal!! $
.!!$ %
SaveChangesAsync!!% 5
(!!5 6
)!!6 7
;!!7 8
return## 
new## 
SuccessResult## (
(##( )
Messages##) 1
.##1 2
GroupClaimUpdated##2 C
)##C D
;##D E
}$$ 
}%% 	
}&& 
}'' ä
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Queries\GetGroupClaimQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
GroupClaims '
.' (
Queries( /
{		 
public

 

class

 
GetGroupClaimQuery

 #
:

$ %
IRequest

& .
<

. /
IDataResult

/ :
<

: ;

GroupClaim

; E
>

E F
>

F G
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class %
GetGroupClaimQueryHandler .
:/ 0
IRequestHandler1 @
<@ A
GetGroupClaimQueryA S
,S T
IDataResultU `
<` a

GroupClaima k
>k l
>l m
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public %
GetGroupClaimQueryHandler ,
(, -!
IGroupClaimRepository- B
groupClaimDalC P
)P Q
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IDataResult )
<) *

GroupClaim* 4
>4 5
>5 6
Handle7 =
(= >
GetGroupClaimQuery> P
requestQ X
,X Y
CancellationTokenZ k
cancellationTokenl }
)} ~
{ 
return 
new 
SuccessDataResult ,
<, -

GroupClaim- 7
>7 8
(8 9
await9 >
_groupClaimDal? M
.M N
GetAsyncN V
(V W
xW X
=>Y [
x\ ]
.] ^
GroupId^ e
==f h
requesti p
.p q
Idq s
)s t
)t u
;u v
} 
} 	
} 
}  
kE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Queries\GetGroupClaimsQuery.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Queries		( /
{

 
public 

class 
GetGroupClaimsQuery $
:% &
IRequest' /
</ 0
IDataResult0 ;
<; <
IEnumerable< G
<G H

GroupClaimH R
>R S
>S T
>T U
{ 
public 
class &
GetGroupClaimsQueryHandler /
:0 1
IRequestHandler2 A
<A B
GetGroupClaimsQueryB U
,U V
IDataResultW b
<b c
IEnumerablec n
<n o

GroupClaimo y
>y z
>z {
>{ |
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public &
GetGroupClaimsQueryHandler -
(- .!
IGroupClaimRepository. C
groupClaimDalD Q
)Q R
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6

GroupClaim6 @
>@ A
>A B
>B C
HandleD J
(J K
GetGroupClaimsQueryK ^
request_ f
,f g
CancellationTokenh y
cancellationToken	z ã
)
ã å
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9

GroupClaim9 C
>C D
>D E
(E F
awaitF K
_groupClaimDalL Z
.Z [
GetListAsync[ g
(g h
)h i
)i j
;j k
} 
} 	
} 
} õ
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Commands\CreateGroupCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
Groups		 "
.		" #
Commands		# +
{

 
public 

class 
CreateGroupCommand #
:$ %
IRequest& .
<. /
IResult/ 6
>6 7
{ 
public 
string 
	GroupName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class %
CreateGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A
CreateGroupCommandA S
,S T
IResultU \
>\ ]
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public %
CreateGroupCommandHandler ,
(, -
IGroupRepository- =
groupDal> F
)F G
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .
CreateGroupCommand. @
requestA H
,H I
CancellationTokenJ [
cancellationToken\ m
)m n
{ 
var 
group 
= 
new 
Group  %
{ 
	GroupName 
= 
request  '
.' (
	GroupName( 1
} 
; 
	_groupDal 
. 
Add 
( 
group #
)# $
;$ %
await 
	_groupDal 
.  
SaveChangesAsync  0
(0 1
)1 2
;2 3
return 
new 
SuccessResult (
(( )
Messages) 1
.1 2

GroupAdded2 <
)< =
;= >
}   
}!! 	
}"" 
}## Å
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Commands\DeleteGroupCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Groups "
." #
Commands# +
{		 
public

 

class

 
DeleteGroupCommand

 #
:

$ %
IRequest

& .
<

. /
IResult

/ 6
>

6 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class %
DeleteGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A
DeleteGroupCommandA S
,S T
IResultU \
>\ ]
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public %
DeleteGroupCommandHandler ,
(, -
IGroupRepository- =
groupDal> F
)F G
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .
DeleteGroupCommand. @
requestA H
,H I
CancellationTokenJ [
cancellationToken\ m
)m n
{ 
var 
groupToDelete !
=" #
await$ )
	_groupDal* 3
.3 4
GetAsync4 <
(< =
x= >
=>? A
xB C
.C D
IdD F
==G I
requestJ Q
.Q R
IdR T
)T U
;U V
	_groupDal 
. 
Delete  
(  !
groupToDelete! .
). /
;/ 0
await 
	_groupDal 
.  
SaveChangesAsync  0
(0 1
)1 2
;2 3
return 
new 
SuccessResult (
(( )
Messages) 1
.1 2
GroupDeleted2 >
)> ?
;? @
} 
} 	
}   
}!! •
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Commands\UpdateGroupCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
Groups		 "
.		" #
Commands		# +
{

 
public 

class 
UpdateGroupCommand #
:$ %
IRequest& .
<. /
IResult/ 6
>6 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
	GroupName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class %
UpdateGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A
UpdateGroupCommandA S
,S T
IResultU \
>\ ]
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public %
UpdateGroupCommandHandler ,
(, -
IGroupRepository- =
groupDal> F
)F G
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .
UpdateGroupCommand. @
requestA H
,H I
CancellationTokenJ [
cancellationToken\ m
)m n
{ 
var 
groupToUpdate !
=" #
new$ '
Group( -
{ 
Id 
= 
request  
.  !
Id! #
,# $
	GroupName 
= 
request  '
.' (
	GroupName( 1
} 
; 
	_groupDal!! 
.!! 
Update!!  
(!!  !
groupToUpdate!!! .
)!!. /
;!!/ 0
await"" 
	_groupDal"" 
.""  
SaveChangesAsync""  0
(""0 1
)""1 2
;""2 3
return## 
new## 
SuccessResult## (
(##( )
Messages##) 1
.##1 2
GroupUpdated##2 >
)##> ?
;##? @
}$$ 
}%% 	
}&& 
}'' Ö
`E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Queries\GetGroupQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Groups "
." #
Queries# *
{		 
public

 

class

 
GetGroupQuery

 
:

  
IRequest

! )
<

) *
IDataResult

* 5
<

5 6
Group

6 ;
>

; <
>

< =
{ 
public 
int 
GroupId 
{ 
get  
;  !
set" %
;% &
}' (
public 
class  
GetGroupQueryHandler )
:* +
IRequestHandler, ;
<; <
GetGroupQuery< I
,I J
IDataResultK V
<V W
GroupW \
>\ ]
>] ^
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public  
GetGroupQueryHandler '
(' (
IGroupRepository( 8
groupDal9 A
)A B
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IDataResult )
<) *
Group* /
>/ 0
>0 1
Handle2 8
(8 9
GetGroupQuery9 F
requestG N
,N O
CancellationTokenP a
cancellationTokenb s
)s t
{ 
var 
group 
= 
await !
	_groupDal" +
.+ ,
GetAsync, 4
(4 5
x5 6
=>7 9
x: ;
.; <
Id< >
==? A
requestB I
.I J
GroupIdJ Q
)Q R
;R S
return 
new 
SuccessDataResult ,
<, -
Group- 2
>2 3
(3 4
group4 9
)9 :
;: ;
} 
} 	
} 
} Ë
aE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Queries\GetGroupsQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Groups "
." #
Queries# *
{ 
public 
class	 
GetGroupsQuery 
: 
IRequest  (
<( )
IDataResult) 4
<4 5
IEnumerable5 @
<@ A
GroupA F
>F G
>G H
>H I
{ 
public 

class !
GetGroupsQueryHandler &
:' (
IRequestHandler) 8
<8 9
GetGroupsQuery9 G
,G H
IDataResultI T
<T U
IEnumerableU `
<` a
Groupa f
>f g
>g h
>h i
{ 
private 
readonly 
IGroupRepository '
	_groupDal( 1
;1 2
public !
GetGroupsQueryHandler "
(" #
IGroupRepository# 3
groupDal4 <
)< =
{ 
	_groupDal 
= 
groupDal 
; 
} 
public 
async 
Task 
< 
IDataResult #
<# $
IEnumerable$ /
</ 0
Group0 5
>5 6
>6 7
>7 8
Handle9 ?
(? @
GetGroupsQuery@ N
requestO V
,V W
CancellationTokenX i
cancellationTokenj {
){ |
{ 
return 
new 
SuccessDataResult $
<$ %
IEnumerable% 0
<0 1
Group1 6
>6 7
>7 8
(8 9
await9 >
	_groupDal? H
.H I
GetListAsyncI U
(U V
)V W
)W X
;X Y
} 
} 
} 
} ˛
xE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Commands\CreateOperationClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
OperationClaims +
.+ ,
Commands, 4
{ 
public 

class '
CreateOperationClaimCommand ,
:- .
IRequest/ 7
<7 8
IResult8 ?
>? @
{ 
public 
string 
	ClaimName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class .
"CreateOperationClaimCommandHandler 7
:8 9
IRequestHandler: I
<I J'
CreateOperationClaimCommandJ e
,e f
IResultg n
>n o
{ 	
private 
readonly %
IOperationClaimRepository 6
_operationClaimDal7 I
;I J
public .
"CreateOperationClaimCommandHandler 5
(5 6%
IOperationClaimRepository6 O
operationClaimDalP a
)a b
{ 
_operationClaimDal "
=# $
operationClaimDal% 6
;6 7
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .'
CreateOperationClaimCommand. I
requestJ Q
,Q R
CancellationTokenS d
cancellationTokene v
)v w
{ 
if 
( 
IsClaimExists !
(! "
request" )
.) *
	ClaimName* 3
)3 4
)4 5
return 
new 
ErrorResult *
(* +
Messages+ 3
.3 4 
OperationClaimExists4 H
)H I
;I J
var!! 
operationClaim!! "
=!!# $
new!!% (
OperationClaim!!) 7
{"" 
Name## 
=## 
request## "
.##" #
	ClaimName### ,
}$$ 
;$$ 
_operationClaimDal%% "
.%%" #
Add%%# &
(%%& '
operationClaim%%' 5
)%%5 6
;%%6 7
await&& 
_operationClaimDal&& (
.&&( )
SaveChangesAsync&&) 9
(&&9 :
)&&: ;
;&&; <
return(( 
new(( 
SuccessResult(( (
(((( )
Messages(() 1
.((1 2
OperationClaimAdded((2 E
)((E F
;((F G
})) 
private** 
bool** 
IsClaimExists** &
(**& '
string**' -
	claimName**. 7
)**7 8
{++ 
return,, 
_operationClaimDal,, )
.,,) *
Query,,* /
(,,/ 0
),,0 1
.,,1 2
Any,,2 5
(,,5 6
x,,6 7
=>,,8 :
x,,; <
.,,< =
Name,,= A
==,,B D
	claimName,,E N
),,N O
;,,O P
}-- 
}.. 	
}// 
}00 £
xE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Commands\DeleteOperationClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
OperationClaims +
.+ ,
Commands, 4
{ 
public 
class	 '
DeleteOperationClaimCommand *
:+ ,
IRequest- 5
<5 6
IResult6 =
>= >
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

class .
"DeleteOperationClaimCommandHandler 3
:4 5
IRequestHandler6 E
<E F'
DeleteOperationClaimCommandF a
,a b
IResultc j
>j k
{ 
private 
readonly %
IOperationClaimRepository 0
_operationClaimDal1 C
;C D
public .
"DeleteOperationClaimCommandHandler /
(/ 0%
IOperationClaimRepository0 I
operationClaimDalJ [
)[ \
{ 
_operationClaimDal 
= 
operationClaimDal .
;. /
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ('
DeleteOperationClaimCommand( C
requestD K
,K L
CancellationTokenM ^
cancellationToken_ p
)p q
{ 
var 
claimToDelete 
= 
await !
_operationClaimDal" 4
.4 5
GetAsync5 =
(= >
x> ?
=>@ B
xC D
.D E
IdE G
==H J
requestK R
.R S
IdS U
)U V
;V W
_operationClaimDal 
. 
Delete !
(! "
claimToDelete" /
)/ 0
;0 1
await 
_operationClaimDal  
.  !
SaveChangesAsync! 1
(1 2
)2 3
;3 4
return   
new   
SuccessResult    
(    !
Messages  ! )
.  ) *!
OperationClaimDeleted  * ?
)  ? @
;  @ A
}!! 
}"" 
}## 
}$$ ¬
xE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Commands\UpdateOperationClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
OperationClaims +
.+ ,
Commands, 4
{ 
public 
class	 '
UpdateOperationClaimCommand *
:+ ,
IRequest- 5
<5 6
IResult6 =
>= >
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

string 
	ClaimName 
{ 
get !
;! "
set# &
;& '
}( )
public 

class .
"UpdateOperationClaimCommandHandler 3
:4 5
IRequestHandler6 E
<E F'
UpdateOperationClaimCommandF a
,a b
IResultc j
>j k
{ 
private 
readonly %
IOperationClaimRepository 0
_operationClaimDal1 C
;C D
public .
"UpdateOperationClaimCommandHandler /
(/ 0%
IOperationClaimRepository0 I
operationClaimDalJ [
)[ \
{ 
_operationClaimDal 
= 
operationClaimDal .
;. /
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ('
UpdateOperationClaimCommand( C
requestD K
,K L
CancellationTokenM ^
cancellationToken_ p
)p q
{ 
var 
claimToUpdate 
= 
new 
OperationClaim  .
{ 	
Id
 
= 
request 
. 
Id 
, 
Name  
 
=   
request   
.   
	ClaimName   "
}!! 	
;!!	 

_operationClaimDal"" 
."" 
Update"" !
(""! "
claimToUpdate""" /
)""/ 0
;""0 1
await## 
_operationClaimDal##  
.##  !
SaveChangesAsync##! 1
(##1 2
)##2 3
;##3 4
return%% 
new%% 
SuccessResult%%  
(%%  !
Messages%%! )
.%%) *!
OperationClaimUpdated%%* ?
)%%? @
;%%@ A
}&& 
}'' 
}(( 
})) “
rE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Queries\GetOperationClaimQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
OperationClaims +
.+ ,
Queries, 3
{ 
public 
class	 "
GetOperationClaimQuery %
:& '
IRequest( 0
<0 1
IDataResult1 <
<< =
OperationClaim= K
>K L
>L M
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

class )
GetOperationClaimQueryHandler .
:/ 0
IRequestHandler1 @
<@ A"
GetOperationClaimQueryA W
,W X
IDataResultY d
<d e
OperationClaime s
>s t
>t u
{ 
private 
readonly %
IOperationClaimRepository 0
_operationClaimDal1 C
;C D
public )
GetOperationClaimQueryHandler *
(* +%
IOperationClaimRepository+ D
operationClaimDalE V
)V W
{ 
_operationClaimDal 
= 
operationClaimDal .
;. /
} 
public 
async 
Task 
< 
IDataResult #
<# $
OperationClaim$ 2
>2 3
>3 4
Handle5 ;
(; <"
GetOperationClaimQuery< R
requestS Z
,Z [
CancellationToken\ m
cancellationTokenn 
)	 Ä
{ 
return 
new 
SuccessDataResult $
<$ %
OperationClaim% 3
>3 4
(4 5
await5 :
_operationClaimDal; M
.M N
GetAsyncN V
(V W
xW X
=>Y [
x\ ]
.] ^
Id^ `
==a c
requestd k
.k l
Idl n
)n o
)o p
;p q
} 
} 
} 
} ù
sE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Queries\GetOperationClaimsQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
OperationClaims +
.+ ,
Queries, 3
{ 
public 
class	 #
GetOperationClaimsQuery &
:' (
IRequest) 1
<1 2
IDataResult2 =
<= >
IEnumerable> I
<I J
OperationClaimJ X
>X Y
>Y Z
>Z [
{ 
public 

class *
GetOperationClaimsQueryHandler /
:0 1
IRequestHandler2 A
<A B#
GetOperationClaimsQueryB Y
,Y Z
IDataResult[ f
<f g
IEnumerableg r
<r s
OperationClaim	s Å
>
Å Ç
>
Ç É
>
É Ñ
{ 
private 
readonly %
IOperationClaimRepository 0
_operationClaimDal1 C
;C D
public *
GetOperationClaimsQueryHandler +
(+ ,%
IOperationClaimRepository, E
operationClaimDalF W
)W X
{ 
_operationClaimDal 
= 
operationClaimDal .
;. /
} 
public 
async 
Task 
< 
IDataResult #
<# $
IEnumerable$ /
</ 0
OperationClaim0 >
>> ?
>? @
>@ A
HandleB H
(H I#
GetOperationClaimsQueryI `
requesta h
,h i
CancellationTokenj {
cancellationToken	| ç
)
ç é
{ 
return 
new 
SuccessDataResult $
<$ %
IEnumerable% 0
<0 1
OperationClaim1 ?
>? @
>@ A
(A B
awaitB G
_operationClaimDalH Z
.Z [
GetListAsync[ g
(g h
)h i
)i j
;j k
} 
} 
} 
} Â
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Commands\CreateUserClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserClaims &
.& '
Commands' /
{ 
public 
class	 "
CreateUserClaimCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 

int 
UserId 
{ 
get 
; 
set  
;  !
}" #
public 

int 
ClaimId 
{ 
get 
; 
set !
;! "
}# $
public 

class )
CreateUserClaimCommandHandler .
:/ 0
IRequestHandler1 @
<@ A"
CreateUserClaimCommandA W
,W X
IResultY `
>` a
{ 
private 
readonly  
IUserClaimRepository +
_userClaimDal, 9
;9 :
public )
CreateUserClaimCommandHandler *
(* + 
IUserClaimRepository+ ?
userClaimDal@ L
)L M
{ 
_userClaimDal 
= 
userClaimDal $
;$ %
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ("
CreateUserClaimCommand( >
request? F
,F G
CancellationTokenH Y
cancellationTokenZ k
)k l
{ 
var 
	userClaim 
= 
new 
	UserClaim %
{ 	
ClaimId
 
= 
request 
. 
ClaimId #
,# $
UserId  
 
=   
request   
.   
UserId   !
}!! 	
;!!	 

_userClaimDal"" 
."" 
Add"" 
("" 
	userClaim"" #
)""# $
;""$ %
await## 
_userClaimDal## 
.## 
SaveChangesAsync## ,
(##, -
)##- .
;##. /
return%% 
new%% 
SuccessResult%%  
(%%  !
Messages%%! )
.%%) *
UserClaimCreated%%* :
)%%: ;
;%%; <
}&& 
}'' 
}(( 
})) œ
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Commands\DeleteUserClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserClaims &
.& '
Commands' /
{ 
public 
class	 "
DeleteUserClaimCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

class )
DeleteUserClaimCommandHandler .
:/ 0
IRequestHandler1 @
<@ A"
DeleteUserClaimCommandA W
,W X
IResultY `
>` a
{ 
private 
readonly  
IUserClaimRepository +
_userClaimDal, 9
;9 :
public )
DeleteUserClaimCommandHandler *
(* + 
IUserClaimRepository+ ?
userClaimDal@ L
)L M
{ 
_userClaimDal 
= 
userClaimDal $
;$ %
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ("
DeleteUserClaimCommand( >
request? F
,F G
CancellationTokenH Y
cancellationTokenZ k
)k l
{ 
var 
entityToDelete 
= 
await "
_userClaimDal# 0
.0 1
GetAsync1 9
(9 :
x: ;
=>< >
x? @
.@ A
UserIdA G
==H J
requestK R
.R S
IdS U
)U V
;V W
_userClaimDal 
. 
Delete 
( 
entityToDelete +
)+ ,
;, -
await 
_userClaimDal 
. 
SaveChangesAsync ,
(, -
)- .
;. /
return   
new   
SuccessResult    
(    !
Messages  ! )
.  ) *
UserClaimDeleted  * :
)  : ;
;  ; <
}!! 
}"" 
}## 
}$$ ã
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Commands\UpdateUserClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserClaims &
.& '
Commands' /
{ 
public 
class	 "
UpdateUserClaimCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

int 
UserId 
{ 
get 
; 
set  
;  !
}" #
public 

int 
ClaimId 
{ 
get 
; 
set !
;! "
}# $
public 

class )
UpdateUserClaimCommandHandler .
:/ 0
IRequestHandler1 @
<@ A"
UpdateUserClaimCommandA W
,W X
IResultY `
>` a
{ 
private 
readonly  
IUserClaimRepository +
_userClaimDal, 9
;9 :
public )
UpdateUserClaimCommandHandler *
(* + 
IUserClaimRepository+ ?
userClaimDal@ L
)L M
{ 
_userClaimDal 
= 
userClaimDal $
;$ %
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ("
UpdateUserClaimCommand( >
request? F
,F G
CancellationTokenH Y
cancellationTokenZ k
)k l
{ 
var 
userClaimToUpdate 
= 
new  #
	UserClaim$ -
{   	
ClaimId!!
 
=!! 
request!! 
.!! 
ClaimId!! #
,!!# $
UserId""
 
="" 
request"" 
."" 
UserId"" !
}## 	
;##	 

_userClaimDal$$ 
.$$ 
Update$$ 
($$ 
userClaimToUpdate$$ .
)$$. /
;$$/ 0
await%% 
_userClaimDal%% 
.%% 
SaveChangesAsync%% ,
(%%, -
)%%- .
;%%. /
return'' 
new'' 
SuccessResult''  
(''  !
Messages''! )
.'') *
UserClaimUpdated''* :
)'': ;
;''; <
}(( 
})) 
}** 
}++ ˆ
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Queries\GetUserClaimQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserClaims &
.& '
Queries' .
{ 
public 
class	 
GetUserClaimQuery  
:! "
IRequest# +
<+ ,
IDataResult, 7
<7 8
	UserClaim8 A
>A B
>B C
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

class $
GetUserClaimQueryHandler )
:* +
IRequestHandler, ;
<; <
GetUserClaimQuery< M
,M N
IDataResultO Z
<Z [
	UserClaim[ d
>d e
>e f
{ 
private 
readonly  
IUserClaimRepository +
_userClaimDal, 9
;9 :
public $
GetUserClaimQueryHandler %
(% & 
IUserClaimRepository& :
userClaimDal; G
)G H
{ 
_userClaimDal 
= 
userClaimDal $
;$ %
} 
public 
async 
Task 
< 
IDataResult #
<# $
	UserClaim$ -
>- .
>. /
Handle0 6
(6 7
GetUserClaimQuery7 H
requestI P
,P Q
CancellationTokenR c
cancellationTokend u
)u v
{ 
return 
new 
SuccessDataResult $
<$ %
	UserClaim% .
>. /
(/ 0
await0 5
_userClaimDal6 C
.C D
GetAsyncD L
(L M
xM N
=>O Q
xR S
.S T
UserIdT Z
==[ ]
request^ e
.e f
Idf h
)h i
)i j
;j k
} 
} 
} 
} ∑
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Queries\GetUserClaimsQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserClaims &
.& '
Queries' .
{ 
public 
class	 
GetUserClaimsQuery !
:" #
IRequest$ ,
<, -
IDataResult- 8
<8 9
IEnumerable9 D
<D E
	UserClaimE N
>N O
>O P
>P Q
{ 
public 

class %
GetUserClaimsQueryHandler *
:+ ,
IRequestHandler- <
<< =
GetUserClaimsQuery= O
,O P
IDataResultQ \
<\ ]
IEnumerable] h
<h i
	UserClaimi r
>r s
>s t
>t u
{ 
private 
readonly  
IUserClaimRepository +
_userClaimDal, 9
;9 :
public %
GetUserClaimsQueryHandler &
(& ' 
IUserClaimRepository' ;
userClaimDal< H
)H I
{ 
_userClaimDal 
= 
userClaimDal $
;$ %
} 
public 
async 
Task 
< 
IDataResult #
<# $
IEnumerable$ /
</ 0
	UserClaim0 9
>9 :
>: ;
>; <
Handle= C
(C D
GetUserClaimsQueryD V
requestW ^
,^ _
CancellationToken` q
cancellationToken	r É
)
É Ñ
{ 
return 
new 
SuccessDataResult $
<$ %
IEnumerable% 0
<0 1
	UserClaim1 :
>: ;
>; <
(< =
await= B
_userClaimDalC P
.P Q
GetListAsyncQ ]
(] ^
)^ _
)_ `
;` a
} 
} 
} 
} „
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Commands\CreateUserGroupCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserGroups &
.& '
Commands' /
{ 
public 
class	 "
CreateUserGroupCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 

int 
GroupId 
{ 
get 
; 
set !
;! "
}# $
public 

int 
UserId 
{ 
get 
; 
set  
;  !
}" #
public 

class )
CreateUserGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A"
CreateUserGroupCommandA W
,W X
IResultY `
>` a
{ 
private 
readonly  
IUserGroupRepository +
_userGroupDal, 9
;9 :
public )
CreateUserGroupCommandHandler *
(* + 
IUserGroupRepository+ ?
userGroupDal@ L
)L M
{ 
_userGroupDal 
= 
userGroupDal $
;$ %
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ("
CreateUserGroupCommand( >
request? F
,F G
CancellationTokenH Y
cancellationTokenZ k
)k l
{ 
var 
	userGroup 
= 
new 
	UserGroup %
{   	
GroupId!!
 
=!! 
request!! 
.!! 
GroupId!! #
,!!# $
UserId""
 
="" 
request"" 
."" 
UserId"" !
}## 	
;##	 

_userGroupDal%% 
.%% 
Add%% 
(%% 
	userGroup%% #
)%%# $
;%%$ %
await&& 
_userGroupDal&& 
.&& 
SaveChangesAsync&& ,
(&&, -
)&&- .
;&&. /
return(( 
new(( 
SuccessResult((  
(((  !
Messages((! )
.(() *
UserGroupAdded((* 8
)((8 9
;((9 :
})) 
}** 
}++ 
},, œ
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Commands\DeleteUserGroupCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserGroups &
.& '
Commands' /
{ 
public 
class	 "
DeleteUserGroupCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

class )
DeleteUserGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A"
DeleteUserGroupCommandA W
,W X
IResultY `
>` a
{ 
private 
readonly  
IUserGroupRepository +
_userGroupDal, 9
;9 :
public )
DeleteUserGroupCommandHandler *
(* + 
IUserGroupRepository+ ?
userGroupDal@ L
)L M
{ 
_userGroupDal 
= 
userGroupDal $
;$ %
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ("
DeleteUserGroupCommand( >
request? F
,F G
CancellationTokenH Y
cancellationTokenZ k
)k l
{ 
var 
entityToDelete 
= 
await "
_userGroupDal# 0
.0 1
GetAsync1 9
(9 :
x: ;
=>< >
x? @
.@ A
UserIdA G
==H J
requestK R
.R S
IdS U
)U V
;V W
_userGroupDal 
. 
Delete 
( 
entityToDelete +
)+ ,
;, -
await 
_userGroupDal 
. 
SaveChangesAsync ,
(, -
)- .
;. /
return!! 
new!! 
SuccessResult!!  
(!!  !
Messages!!! )
.!!) *
UserGroupDeleted!!* :
)!!: ;
;!!; <
}"" 
}## 
}$$ 
}%% ö
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Commands\UpdateUserGroupCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserGroups &
.& '
Commands' /
{ 
public 
class	 "
UpdateUserGroupCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

int 
UserId 
{ 
get 
; 
set  
;  !
}" #
public 

int 
GroupId 
{ 
get 
; 
set !
;! "
}# $
public 

class )
UpdateUserGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A"
UpdateUserGroupCommandA W
,W X
IResultY `
>` a
{ 
private 
readonly  
IUserGroupRepository +
_userGroupDal, 9
;9 :
public )
UpdateUserGroupCommandHandler *
(* + 
IUserGroupRepository+ ?
userGroupDal@ L
)L M
{ 
_userGroupDal 
= 
userGroupDal $
;$ %
} 
public 
async 
Task 
< 
IResult 
>  
Handle! '
(' ("
UpdateUserGroupCommand( >
request? F
,F G
CancellationTokenH Y
cancellationTokenZ k
)k l
{ 
var 
userGroupToUpdate 
= 
new  #
	UserGroup$ -
{   	
GroupId!!
 
=!! 
request!! 
.!! 
GroupId!! #
,!!# $
UserId""
 
="" 
request"" 
."" 
UserId"" !
,""! "
}## 	
;##	 

_userGroupDal%% 
.%% 
Update%% 
(%% 
userGroupToUpdate%% .
)%%. /
;%%/ 0
await&& 
_userGroupDal&& 
.&& 
SaveChangesAsync&& ,
(&&, -
)&&- .
;&&. /
return'' 
new'' 
SuccessResult''  
(''  !
Messages''! )
.'') *
UserGroupUpdated''* :
)'': ;
;''; <
})) 
}** 
}++ 
},, Ô
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Queries\GetUserGroupQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserGroups &
.& '
Queries' .
{ 
class 
GetUserGroupQuery 
{ 
}		 
}

 ∑
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Queries\GetUserGroupsQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserGroups &
.& '
Queries' .
{ 
public 

class 
GetUserGroupsQuery #
:$ %
IRequest& .
<. /
IDataResult/ :
<: ;
IEnumerable; F
<F G
	UserGroupG P
>P Q
>Q R
>R S
{ 
public 
class %
GetUserGroupsQueryHandler .
:/ 0
IRequestHandler1 @
<@ A
GetUserGroupsQueryA S
,S T
IDataResultU `
<` a
IEnumerablea l
<l m
	UserGroupm v
>v w
>w x
>x y
{ 	
private 
readonly  
IUserGroupRepository 1
_userGroupDal2 ?
;? @
public %
GetUserGroupsQueryHandler ,
(, - 
IUserGroupRepository- A
userGroupDalB N
)N O
{ 
_userGroupDal 
= 
userGroupDal  ,
;, -
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
	UserGroup6 ?
>? @
>@ A
>A B
HandleC I
(I J
GetUserGroupsQueryJ \
request] d
,d e
CancellationTokenf w
cancellationToken	x â
)
â ä
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9
	UserGroup9 B
>B C
>C D
(D E
awaitE J
_userGroupDalK X
.X Y
GetListAsyncY e
(e f
)f g
)g h
;h i
} 
} 	
} 
} ü
PE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Helpers\AwaitableLock.cs
	namespace 	
Business
 
. 
Helpers 
{ 
public 
class 
AwaitableLock 
{ 
private 	
readonly
 
SemaphoreSlim  
toLock! '
;' (
public 
AwaitableLock	 
( 
) 
{ 
toLock 	
=
 
new 
SemaphoreSlim 
( 
$num 
,  
$num! "
)" #
;# $
} 
public 
async	 
Task 
< 
LockReleaser  
>  !
Lock" &
(& '
TimeSpan' /
timeout0 7
)7 8
{ 
if 
( 
await 
toLock 
. 
	WaitAsync 
( 
timeout %
)% &
)& '
{ 
return 

new 
LockReleaser 
( 
toLock "
)" #
;# $
} 
throw 
new	 
TimeoutException 
( 
) 
;  
} 
public 
struct	 
LockReleaser 
: 
IDisposable *
{   
private!! 

readonly!! 
SemaphoreSlim!! !
	toRelease!!" +
;!!+ ,
public## 	
LockReleaser##
 
(## 
SemaphoreSlim## $
	toRelease##% .
)##. /
{$$ 
this%% 
.%% 	
	toRelease%%	 
=%% 
	toRelease%% 
;%% 
}&& 
public'' 	
void''
 
Dispose'' 
('' 
)'' 
{(( 
	toRelease)) 
.)) 
Release)) 
()) 
))) 
;)) 
}** 
}++ 
},, 
}-- Ù
bE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Helpers\OperationClaimCreatorMiddleware.cs
	namespace 	
Business
 
. 
Helpers 
{ 
public 

static 
class +
OperationClaimCreatorMiddleware 7
{ 
public 
static 
void &
UseDbOperationClaimCreator 5
(5 6
this6 :
IApplicationBuilder; N
appO R
)R S
{ 	
var 
mediator 
= 
ServiceTool &
.& '
ServiceProvider' 6
.6 7

GetService7 A
<A B
	IMediatorB K
>K L
(L M
)M N
;N O
foreach 
( 
var 
operationName &
in' )
GetOperationNames* ;
(; <
)< =
)= >
{ 
mediator 
. 
Send 
( 
new !'
CreateOperationClaimCommand" =
{ 
	ClaimName 
= 
operationName  -
} 
) 
; 
} 
} 	
private 
static 
IEnumerable "
<" #
string# )
>) *
GetOperationNames+ <
(< =
)= >
{ 	
var 
assemblyNames 
= 
Assembly  (
.( ) 
GetExecutingAssembly) =
(= >
)> ?
.? @
GetTypes@ H
(H I
)I J
. 
Where 
( 
x 
=> 
x!! 
.!! 
	Namespace!! 
!=!! 
null!! #
&&!!$ &
x!!' (
.!!( )
	Namespace!!) 2
.!!2 3

StartsWith!!3 =
(!!= >
$str!!> Q
)!!Q R
&&!!S U
(!!V W
x!!W X
.!!X Y
Name!!Y ]
.!!] ^
EndsWith!!^ f
(!!f g
$str!!g p
)!!p q
||!!r t
x!!u v
.!!v w
Name!!w {
.!!{ |
EndsWith	!!| Ñ
(
!!Ñ Ö
$str
!!Ö å
)
!!å ç
)
!!ç é
&&"" 
x"" 
."" 
CustomAttributes"" #
.""# $
Any""$ '
(""' (
a""( )
=>""* ,
a""- .
."". /
AttributeType""/ <
==""= ?
typeof""@ F
(""F G
SecuredOperation""G W
)""W X
)""X Y
)""Y Z
.## 
Select## 
(## 
x## 
=>## 
x## 
.## 
Name## 
)##  
;##  !
return$$ 
assemblyNames$$  
;$$  !
}%% 	
}&& 
}'' ˚<
WE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Helpers\ValidationExtensions.cs
	namespace 	
Business
 
. 
ValidationRules "
{ 
public 
static 
class  
ValidationExtensions )
{ 
public		 
static			 
bool		 

IsCidValid		 
(		  
this		  $
string		% +
	citizenId		, 5
)		5 6
{

 
if 
( 
	citizenId 
!= 
null 
&& 
	citizenId %
.% &
Length& ,
==- /
$num0 2
)2 3
return 


IsCidValid 
( 
long 
. 
Parse  
(  !
	citizenId! *
)* +
)+ ,
;, -
else 
return 

false 
; 
} 
public 
static	 
long 
AddChecksumToCid %
(% &
long& *
cidWithoutChecksum+ =
)= >
{ 
var 
checksum 
= 
ComputeCidChecksum $
($ %
cidWithoutChecksum% 7
)7 8
;8 9
return 	
(
 
cidWithoutChecksum 
/ 
$num  #
)# $
*% &
$num' *
++ ,
checksum- 5
;5 6
} 
public 
static	 
bool 

IsCidValid 
(  
this  $
long% )
	citizenId* 3
)3 4
{ 
long 
TcNo 
= 
	citizenId 
; 
var 
ATCNO 
= 
TcNo 
/ 
$num 
; 
var 
checksum 
= 
ComputeCidChecksum $
($ %
	citizenId% .
). /
;/ 0
var 
returnValue 
= 
( 
ATCNO 
* 
$num !
+" #
checksum$ ,
), -
==. 0
TcNo1 5
;5 6
return 	
returnValue
 
; 
} 
public!! 
static!!	 
long!! 
ComputeCidChecksum!! '
(!!' (
this!!( ,
long!!- 1
	citizenId!!2 ;
)!!; <
{"" 
long## 
TcNo## 
=## 
	citizenId## 
;## 
long$$ 
ATCNO$$ 
,$$ 
BTCNO$$ 
;$$ 
long%% 
C1%% 

,%%
 
C2%% 
,%% 
C3%% 
,%% 
C4%% 
,%% 
C5%% 
,%% 
C6%% 
,%% 
C7%%  "
,%%" #
C8%%$ &
,%%& '
C9%%( *
,%%* +
Q1%%, .
,%%. /
Q2%%0 2
;%%2 3
ATCNO&& 
=&&	 

TcNo&& 
/&& 
$num&& 
;&& 
BTCNO&& 
=&& 
TcNo&& #
/&&$ %
$num&&& )
;&&) *
C1&&+ -
=&&. /
ATCNO&&0 5
%&&6 7
$num&&8 :
;&&: ;
ATCNO&&< A
=&&B C
ATCNO&&D I
/&&J K
$num&&L N
;&&N O
C2&&P R
=&&S T
ATCNO&&U Z
%&&[ \
$num&&] _
;&&_ `
ATCNO&&a f
=&&g h
ATCNO&&i n
/&&o p
$num&&q s
;&&s t
C3'' 
='' 
ATCNO'' 
%'' 
$num'' 
;'' 
ATCNO'' 
='' 
ATCNO'' !
/''" #
$num''$ &
;''& '
C4''( *
=''+ ,
ATCNO''- 2
%''3 4
$num''5 7
;''7 8
ATCNO''9 >
=''? @
ATCNO''A F
/''G H
$num''I K
;''K L
C5''M O
=''P Q
ATCNO''R W
%''X Y
$num''Z \
;''\ ]
ATCNO''^ c
=''d e
ATCNO''f k
/''l m
$num''n p
;''p q
C6(( 
=(( 
ATCNO(( 
%(( 
$num(( 
;(( 
ATCNO(( 
=(( 
ATCNO(( !
/((" #
$num(($ &
;((& '
C7((( *
=((+ ,
ATCNO((- 2
%((3 4
$num((5 7
;((7 8
ATCNO((9 >
=((? @
ATCNO((A F
/((G H
$num((I K
;((K L
C8((M O
=((P Q
ATCNO((R W
%((X Y
$num((Z \
;((\ ]
ATCNO((^ c
=((d e
ATCNO((f k
/((l m
$num((n p
;((p q
C9)) 
=)) 
ATCNO)) 
%)) 
$num)) 
;)) 
ATCNO)) 
=)) 
ATCNO)) !
/))" #
$num))$ &
;))& '
Q1** 
=** 
(** 	
(**	 

$num**
 
-** 
(** 
(** 
(** 
(** 
C1** 
+** 
C3** 
+** 
C5** 
+**  !
C7**" $
+**% &
C9**' )
)**) *
***+ ,
$num**- .
)**. /
+**0 1
(**2 3
C2**3 5
+**6 7
C4**8 :
+**; <
C6**= ?
+**@ A
C8**B D
)**D E
)**E F
%**G H
$num**I K
)**K L
)**L M
%**N O
$num**P R
)**R S
;**S T
Q2++ 
=++ 
(++ 	
(++	 

$num++
 
-++ 
(++ 
(++ 
(++ 
(++ 
(++ 
C2++ 
+++ 
C4++ 
+++ 
C6++  
+++! "
C8++# %
)++% &
+++' (
Q1++) +
)+++ ,
*++- .
$num++/ 0
)++0 1
+++2 3
(++4 5
C1++5 7
+++8 9
C3++: <
+++= >
C5++? A
+++B C
C7++D F
+++G H
C9++I K
)++K L
)++L M
%++N O
$num++P R
)++R S
)++S T
%++U V
$num++W Y
)++Y Z
;++Z [
var,, 
returnValue,, 
=,, 
Q1,, 
*,, 
$num,, 
+,, 
Q2,, !
;,,! "
return.. 	
returnValue..
 
;.. 
}// 
public11 
static11	 
bool11 
IsPhoneValid11 !
(11! "
this11" &
string11' -
mobilePhone11. 9
)119 :
{22 
if33 
(33 
string33 
.33 
IsNullOrWhiteSpace33 !
(33! "
mobilePhone33" -
)33- .
)33. /
return44 
false44 
;44 
else55 
{66 
mobilePhone77 
=77 
System77 
.77 
Text77 
.77 
RegularExpressions77 1
.771 2
Regex772 7
.777 8
Replace778 ?
(77? @
mobilePhone77@ K
,77K L
$str77M U
,77U V
$str77W Y
)77Y Z
;77Z [
return88 
mobilePhone88 
.88 

StartsWith88 "
(88" #
$str88# '
)88' (
&&88) +
mobilePhone88, 7
.887 8
Length888 >
==88? A
$num88B D
;88D E
}99 
}:: 
};; 
}<< ü	
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\AgentAuthenticationProvider.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{		 
public

 

class

 '
AgentAuthenticationProvider

 ,
:

- .#
IAuthenticationProvider

/ F
{ 
public 
Task 
< 
LoginUserResult #
># $
Login% *
(* +
LoginUserCommand+ ;
command< C
)C D
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
public 
virtual 
Task 
< 
IDataResult '
<' (
SFwToken( 0
>0 1
>1 2
Verify3 9
(9 :
VerifyOTPCommand: J
commandK R
)R S
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
} 
} ®
lE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\AuthenticationCoordinator.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 

class %
AuthenticationCoordinator *
:+ ,&
IAuthenticationCoordinator- G
{ 
private 
readonly 
IServiceProvider )
serviceProvider* 9
;9 :
public %
AuthenticationCoordinator (
(( )
IServiceProvider) 9
serviceProvider: I
)I J
{ 	
this 
. 
serviceProvider  
=! "
serviceProvider# 2
;2 3
} 	
public #
IAuthenticationProvider &
SelectProvider' 5
(5 6&
AuthenticationProviderType6 P
typeQ U
)U V
{ 	
switch 
( 
type 
) 
{ 
case &
AuthenticationProviderType /
./ 0
Person0 6
:6 7
return 
( #
IAuthenticationProvider 3
)3 4
serviceProvider4 C
.C D

GetServiceD N
(N O
typeofO U
(U V(
PersonAuthenticationProviderV r
)r s
)s t
;t u
case &
AuthenticationProviderType /
./ 0
Agent0 5
:5 6
return 
( #
IAuthenticationProvider 3
)3 4
serviceProvider4 C
.C D

GetServiceD N
(N O
typeofO U
(U V'
AgentAuthenticationProviderV q
)q r
)r s
;s t
default 
: 
throw 
new  
ApplicationException 2
(2 3
$"3 5/
#Authentication provider not found: 5 X
{X Y
typeY ]
}] ^
"^ _
)_ `
;` a
}   
}!! 	
}"" 
}$$ áA
mE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\AuthenticationProviderBase.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 

abstract 
class &
AuthenticationProviderBase 4
:5 6#
IAuthenticationProvider7 N
{ 
private 
readonly "
IMobileLoginRepository /
_logins0 7
;7 8
private 
readonly 
ISmsService $
_smsService% 0
;0 1
	protected &
AuthenticationProviderBase ,
(, -"
IMobileLoginRepository- C
loginsD J
,J K
ISmsServiceL W

smsServiceX b
)b c
{ 	
_logins 
= 
logins 
; 
_smsService 
= 

smsService $
;$ %
} 	
public 
abstract 
Task 
< 
LoginUserResult ,
>, -
Login. 3
(3 4
LoginUserCommand4 D
commandE L
)L M
;M N
public 
abstract 
Task 
< 
SFwToken %
>% &
CreateToken' 2
(2 3
VerifyOTPCommand3 C
commandD K
)K L
;L M
	protected 
virtual 
async 
Task  $
<$ %
LoginUserResult% 4
>4 5"
PrepareOneTimePassword6 L
(L M&
AuthenticationProviderTypeM g
providerTypeh t
,t u
stringv |
	cellPhone	} Ü
,
Ü á
string
à é
externalUserId
è ù
)
ù û
{ 	
var 
oneTimePassword 
=  !
await" '
_logins( /
./ 0
Query0 5
(5 6
)6 7
. 
Where "
(" #
m# $
=>% '
m( )
.) *
Provider* 2
==3 5
providerType6 B
&&C E
mF G
.G H
ExternalUserIdH V
==W Y
externalUserIdZ h
&&i k
ml m
.m n
IsUsedn t
==u w
falsex }
)} ~
.   
Select   #
(  # $
m  $ %
=>  & (
m  ) *
.  * +
Code  + /
)  / 0
.!! 
FirstOrDefaultAsync!! 0
(!!0 1
)!!1 2
;!!2 3
int"" 

mobileCode"" 
;"" 
if## 
(## 
oneTimePassword## 
==##  "
default### *
)##* +
{$$ 

mobileCode%% 
=%% 
RandomPassword%% +
.%%+ ,!
RandomNumberGenerator%%, A
(%%A B
)%%B C
;%%C D
try&& 
{'' 
var(( 
sendSms(( 
=((  !
await((" '
_smsService((( 3
.((3 4
	SendAsist((4 =
(((= >
$"((> @
SAAT ((@ E
{((E F
DateTime((F N
.((N O
Now((O R
.((R S
ToShortTimeString((S d
(((d e
)((e f
}((f g
 TALEP ETTIGINIZ((g w
"((w x
+((y z
$"))$ &(
24 SAAT GECERLI PAROLANIZ : ))& B
{))B C

mobileCode))C M
}))M N
"))N O
,))O P
	cellPhone))Q Z
)))Z [
;))[ \
_logins** 
.** 
Add** 
(**  
new**  #
MobileLogin**$ /
{++ 
Code,, 
=,, 

mobileCode,, )
,,,) *
IsSend-- 
=--  
sendSms--! (
,--( )
SendDate..  
=..! "
DateTime..# +
...+ ,
Now.., /
,../ 0
ExternalUserId// &
=//' (
externalUserId//) 7
,//7 8
Provider00  
=00! "
providerType00# /
,00/ 0
IsUsed11 
=11  
false11! &
}22 
)22 
;22 
await33 
_logins33 !
.33! "
SaveChangesAsync33" 2
(332 3
)333 4
;334 5
}44 
catch55 
{66 
return77 
new77 
LoginUserResult77 .
{77/ 0
Message771 8
=779 :
Messages77; C
.77C D
SmsServiceNotFound77D V
,77V W
Status77X ^
=77_ `
LoginUserResult77a p
.77p q
LoginStatus77q |
.77| }
ServiceError	77} â
}
77ä ã
;
77ã å
}88 
}99 
else:: 
{;; 

mobileCode<< 
=<< 
oneTimePassword<< ,
;<<, -
}== 
return>> 
new>> 
LoginUserResult>> &
{>>' (
Message>>) 0
=>>1 2
Messages>>3 ;
.>>; <
SendMobileCode>>< J
+>>K L

mobileCode>>M W
,>>W X
Status>>Y _
=>>` a
LoginUserResult>>b q
.>>q r
LoginStatus>>r }
.>>} ~
Ok	>>~ Ä
}
>>Å Ç
;
>>Ç É
}?? 	
publicAA 
virtualAA 
asyncAA 
TaskAA !
<AA! "
IDataResultAA" -
<AA- .
SFwTokenAA. 6
>AA6 7
>AA7 8
VerifyAA9 ?
(AA? @
VerifyOTPCommandAA@ P
commandAAQ X
)AAX Y
{BB 	
varCC 
externalUserIdCC 
=CC  
commandCC! (
.CC( )
ExternalUserIdCC) 7
;CC7 8
varDD 
dateDD 
=DD 
DateTimeDD 
.DD  
NowDD  #
;DD# $
varEE 
loginEE 
=EE 
awaitEE 
_loginsEE %
.EE% &
GetAsyncEE& .
(EE. /
mEE/ 0
=>EE1 3
mEE4 5
.EE5 6
ProviderEE6 >
==EE? A
commandEEB I
.EEI J
ProviderEEJ R
&&EES U
mEEV W
.EEW X
CodeEEX \
==EE] _
commandEE` g
.EEg h
CodeEEh l
&&EEm o
mGG 
.GG 
ExternalUserIdGG  
==GG! #
externalUserIdGG$ 2
&&GG3 5
mGG6 7
.GG7 8
SendDateGG8 @
.GG@ A

AddSecondsGGA K
(GGK L
$numGGL O
)GGO P
>GGQ R
dateGGS W
)GGW X
;GGX Y
ifII 
(II 
loginII 
==II 
nullII 
)II 
{JJ 
returnKK 
newKK 
ErrorDataResultKK *
<KK* +
SFwTokenKK+ 3
>KK3 4
(KK4 5
MessagesKK5 =
.KK= >
InvalidCodeKK> I
)KKI J
;KKJ K
}LL 
varMM 
accessTokenMM 
=MM 
awaitMM #
CreateTokenMM$ /
(MM/ 0
commandMM0 7
)MM7 8
;MM8 9
ifPP 
(PP 
accessTokenPP 
.PP 
ProviderPP $
==PP% '&
AuthenticationProviderTypePP( B
.PPB C
UnknownPPC J
)PPJ K
throwQQ 
newQQ 
ArgumentExceptionQQ +
(QQ+ ,
$strQQ, H
)QQH I
;QQI J
loginSS 
.SS 
IsUsedSS 
=SS 
trueSS 
;SS  
_loginsTT 
.TT 
UpdateTT 
(TT 
loginTT  
)TT  !
;TT! "
awaitUU 
_loginsUU 
.UU 
SaveChangesAsyncUU *
(UU* +
)UU+ ,
;UU, -
returnXX 
newXX 
SuccessDataResultXX (
<XX( )
SFwTokenXX) 1
>XX1 2
(XX2 3
accessTokenXX3 >
,XX> ?
MessagesXX@ H
.XXH I
SuccessfulLoginXXI X
)XXX Y
;XXY Z
}YY 	
}ZZ 
}[[ ù
mE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\IAuthenticationCoordinator.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 
	interface &
IAuthenticationCoordinator ,
{ #
IAuthenticationProvider 
SelectProvider (
(( )&
AuthenticationProviderType) C
typeD H
)H I
;I J
} 
}		 †
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\IAuthenticationProvider.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 

	interface #
IAuthenticationProvider ,
{ 
Task		 
<		 
LoginUserResult		 
>		 
Login		 #
(		# $
LoginUserCommand		$ 4
command		5 <
)		< =
;		= >
Task

 
<

 
IDataResult

 
<

 
SFwToken

 !
>

! "
>

" #
Verify

$ *
(

* +
VerifyOTPCommand

+ ;
command

< C
)

C D
;

D E
} 
} Û
eE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\ILoginDataProvider.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 
	interface 
ILoginDataProvider $
{ 
Task 
< #
LoginDataProviderResult 
> 
Verify  &
(& '
string' -
accessToken. 9
)9 :
;: ;
} 
public 
class #
LoginDataProviderResult %
{ 
public 
bool	 
	IsSuccess 
{ 
get 
; 
set "
;" #
}$ %
public 
string	 
Message 
{ 
get 
; 
set "
;" #
}$ %
public 
ExternalUser	 
ExternalUser "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
public!! 
class!! 
ExternalUser!! 
{"" 
public&& 
string&&	 
AgentUserId&& 
{&& 
get&& !
;&&! "
set&&# &
;&&& '
}&&( )
public++ 
long++	 
	CitizenId++ 
{++ 
get++ 
;++ 
set++ "
;++" #
}++$ %
public00 
string00	 
Email00 
{00 
get00 
;00 
set00  
;00  !
}00" #
public55 
string55	 
MobilePhone55 
{55 
get55 !
;55! "
set55# &
;55& '
}55( )
public:: 
string::	 
Address:: 
{:: 
get:: 
;:: 
set:: "
;::" #
}::$ %
public?? 
string??	 
Notes?? 
{?? 
get?? 
;?? 
set??  
;??  !
}??" #
publicAA 
voidAA	 
CleanRecordAA 
(AA 
)AA 
{BB 
ifEE 
(EE 
!EE 
stringEE 
.EE 
IsNullOrWhiteSpaceEE !
(EE! "
MobilePhoneEE" -
)EE- .
)EE. /
{FF 
ifHH 
(HH 
!HH 	
MobilePhoneHH	 
.HH 

StartsWithHH 
(HH  
$strHH  #
)HH# $
)HH$ %
MobilePhoneII 
=II 
$strII 
+II 
MobilePhoneII $
;II$ %
MobilePhoneJJ 
=JJ 
MobilePhoneJJ 
.JJ 
SplitJJ #
(JJ# $
$charJJ$ '
)JJ' (
[JJ( )
$numJJ) *
]JJ* +
.JJ+ ,
TrimJJ, 0
(JJ0 1
)JJ1 2
;JJ2 3
}KK 
}LL 
}MM 
}NN Ç
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\Model\LoginUserCommand.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 
class 
LoginUserCommand 
:  
IRequest! )
<) *
IDataResult* 5
<5 6
LoginUserResult6 E
>E F
>F G
{ 
public 
string	 
ExternalUserId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string	 
MobilePhone 
{ 
get !
;! "
set# &
;& '
}( )
public 
string	 
Password 
{ 
get 
; 
set  #
;# $
}% &
public &
AuthenticationProviderType	 #
Provider$ ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
bool	 
IsPhoneValid 
{   
get!! 
{"" 
if## 
(## 
string## 
.## 
IsNullOrWhiteSpace## !
(##! "
MobilePhone##" -
)##- .
)##. /
return$$ 
false$$ 
;$$ 
else%% 
{&& 
PostProcess'' 
('' 
)'' 
;'' 
MobilePhone(( 
=(( 
System(( 
.(( 
Text(( 
.(( 
RegularExpressions(( 1
.((1 2
Regex((2 7
.((7 8
Replace((8 ?
(((? @
MobilePhone((@ K
,((K L
$str((M U
,((U V
$str((W Y
)((Y Z
;((Z [
return)) 
MobilePhone)) 
.)) 

StartsWith)) "
())" #
$str))# '
)))' (
&&))) +
MobilePhone)), 7
.))7 8
Length))8 >
==))? A
$num))B D
;))D E
}** 
}++ 
},, 
public-- 
long--	 
AsCitizenId-- 
(-- 
)-- 
=>-- 
long-- #
.--# $
Parse--$ )
(--) *
ExternalUserId--* 8
)--8 9
;--9 :
public11 
void11	 
PostProcess11 
(11 
)11 
{22 
MobilePhone33 
=33 
System33 
.33 
Text33 
.33 
RegularExpressions33 /
.33/ 0
Regex330 5
.335 6
Replace336 =
(33= >
MobilePhone33> I
,33I J
$str33K S
,33S T
$str33U W
)33W X
;33X Y
}44 
}55 
}66 ı
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\Model\LoginUserResult.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 
class	 
LoginUserResult 
{ 
public 

LoginStatus 
Status 
{ 
get  #
;# $
set% (
;( )
}* +
public 

string 
Message 
{ 
get 
;  
set! $
;$ %
}& '
public 

string 
[ 
] 
MobilePhones  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 

enum 
LoginStatus 
{ 
UserNotFound 
, 
WrongCredentials 
, 
PhoneNumberRequired 
, 
ServiceError   
,   
Ok!! 
}"" 
}## 
}$$ ˝
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\Model\VerifyOTPCommand.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 
class 
VerifyOTPCommand 
:  
IRequest! )
<) *
IDataResult* 5
<5 6
SFwToken6 >
>> ?
>? @
{ 
public &
AuthenticationProviderType	 #
Provider$ ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
string	 
ProviderSubType 
{  !
get" %
;% &
set' *
;* +
}, -
public 

string 
ExternalUserId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 

int 
Code 
{ 
get 
; 
set 
; 
}  !
} 
} Â
[E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\OASToken.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public		 
class		 
SFwToken		 
:		 
AccessToken		 $
{

 
public 
string	 
ExternalUserId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public &
AuthenticationProviderType	 #
Provider$ ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
string	 

OnBehalfOf 
{ 
get  
;  !
set" %
;% &
}' (
} 
} å)
oE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\PersonAuthenticationProvider.cs
	namespace

 	
Business


 
.

 
Services

 
.

 
Authentication

 *
{ 
public 

class (
PersonAuthenticationProvider -
:. /&
AuthenticationProviderBase0 J
,J K#
IAuthenticationProviderL c
{ 
private 
readonly 
IUserRepository (
_users) /
;/ 0
private 
readonly 
ITokenHelper %
_tokenHelper& 2
;2 3
public &
AuthenticationProviderType )
ProviderType* 6
{7 8
get9 <
;< =
}> ?
public (
PersonAuthenticationProvider +
(+ ,&
AuthenticationProviderType, F
providerTypeG S
,S T
IUserRepositoryU d
userse j
,j k#
IMobileLoginRepository	l Ç
mobileLogins
É è
,
è ê
ITokenHelper
ë ù
tokenHelper
û ©
,
© ™
ISmsService
´ ∂

smsService
∑ ¡
)
¡ ¬
: 
base 
( 
mobileLogins +
,+ ,

smsService- 7
)7 8
{ 	
_users 
= 
users 
; 
ProviderType 
= 
providerType '
;' (
_tokenHelper 
= 
tokenHelper &
;& '
} 	
public 
override 
async 
Task "
<" #
LoginUserResult# 2
>2 3
Login4 9
(9 :
LoginUserCommand: J
commandK R
)R S
{ 	
var 
	citizenId 
= 
command #
.# $
AsCitizenId$ /
(/ 0
)0 1
;1 2
var   
user   
=   
await   
_users   #
.  # $
Query  $ )
(  ) *
)  * +
.!! 
Where!! "
(!!" #
u!!# $
=>!!% '
u!!( )
.!!) *
	CitizenId!!* 3
==!!4 6
	citizenId!!7 @
)!!@ A
."" 
FirstOrDefaultAsync"" 0
(""0 1
)""1 2
;""2 3
if&& 
(&& 
command&& 
.&& 
IsPhoneValid&& $
)&&$ %
return'' 
await'' "
PrepareOneTimePassword'' 3
(''3 4&
AuthenticationProviderType''4 N
.''N O
Person''O U
,''U V
user''W [
.''[ \
MobilePhones''\ h
,''h i
user''j n
.''n o
	CitizenId''o x
.''x y
ToString	''y Å
(
''Å Ç
)
''Ç É
)
''É Ñ
;
''Ñ Ö
else(( 
return)) 
new)) 
LoginUserResult)) *
{** 
Message++ 
=++ 
$str++ G
,++G H
Status,, 
=,, 
LoginUserResult,, ,
.,,, -
LoginStatus,,- 8
.,,8 9
PhoneNumberRequired,,9 L
,,,L M
MobilePhones--  
=--! "
new--# &
string--' -
[--- .
]--. /
{--0 1
user--2 6
.--6 7
MobilePhones--7 C
}--D E
}.. 
;.. 
}// 	
public11 
override11 
async11 
Task11 "
<11" #
SFwToken11# +
>11+ ,
CreateToken11- 8
(118 9
VerifyOTPCommand119 I
command11J Q
)11Q R
{22 	
var33 
	citizenId33 
=33 
long33  
.33  !
Parse33! &
(33& '
command33' .
.33. /
ExternalUserId33/ =
)33= >
;33> ?
var44 
user44 
=44 
await44 
_users44 #
.44# $
GetAsync44$ ,
(44, -
u44- .
=>44/ 1
u442 3
.443 4
	CitizenId444 =
==44> @
	citizenId44A J
)44J K
;44K L
user55 
.55 &
AuthenticationProviderType55 +
=55, -
ProviderType55. :
.55: ;
ToString55; C
(55C D
)55D E
;55E F
var77 
claims77 
=77 
_users77 
.77  
	GetClaims77  )
(77) *
user77* .
.77. /
UserId77/ 5
)775 6
;776 7
var88 
accessToken88 
=88 
_tokenHelper88 *
.88* +
CreateToken88+ 6
<886 7
SFwToken887 ?
>88? @
(88@ A
user88A E
,88E F
claims88G M
)88M N
;88N O
accessToken99 
.99 
Provider99  
=99! "
ProviderType99# /
;99/ 0
return:: 
accessToken:: 
;:: 
};; 	
}>> 
}?? „S
BE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Startup.cs
	namespace 	
Business
 
{ 
public 

partial 
class 
BussinessStartup )
{   
	protected!! 
readonly!! 
IHostEnvironment!! +
hostEnvironment!!, ;
;!!; <
public(( 
BussinessStartup(( 
(((  
IConfiguration((  .
configuration((/ <
,((< =
IHostEnvironment((> N
hostEnvironment((O ^
)((^ _
{)) 	
Configuration** 
=** 
configuration** )
;**) *
this++ 
.++ 
hostEnvironment++  
=++! "
hostEnvironment++# 2
;++2 3
},, 	
public11 
IConfiguration11 
Configuration11 +
{11, -
get11. 1
;111 2
}113 4
public<< 
virtual<< 
void<< 
ConfigureServices<< -
(<<- .
IServiceCollection<<. @
services<<A I
)<<I J
{== 	
var>> 
thisAssembly>> 
=>> 
Assembly>> '
.>>' (
GetAssembly>>( 3
(>>3 4
typeof>>4 :
(>>: ;
SecuredOperation>>; K
)>>K L
)>>L M
;>>M N
services?? 
.?? 

AddMediatR?? 
(??  
thisAssembly??  ,
)??, -
;??- .
FuncAA 
<AA 
IServiceProviderAA !
,AA! "
ClaimsPrincipalAA# 2
>AA2 3
getPrincipalAA4 @
=AAA B
(AAC D
spAAD F
)AAF G
=>AAH J
spCC 
.CC 

GetServiceCC 
<CC  
IHttpContextAccessorCC 2
>CC2 3
(CC3 4
)CC4 5
.CC5 6
HttpContextCC6 A
?CCA B
.CCB C
UserCCC G
??CCH J
newCCK N
ClaimsPrincipalCCO ^
(CC^ _
newCC_ b
ClaimsIdentityCCc q
(CCq r
$strCCr {
)CC{ |
)CC| }
;CC} ~
servicesEE 
.EE 
	AddScopedEE 
<EE 

IPrincipalEE )
>EE) *
(EE* +
getPrincipalEE+ 7
)EE7 8
;EE8 9
servicesGG 
.GG 
AddSingletonGG !
<GG! "
IActivityMonitorGG" 2
,GG2 3
ActivityMonitorGG4 C
>GGC D
(GGD E
)GGE F
;GGF G
servicesII 
.II 
AddTransientII !
(II! "
typeofII" (
(II( )
IPipelineBehaviorII) :
<II: ;
,II; <
>II< =
)II= >
,II> ?
typeofII@ F
(IIF G#
InstrumentationBehaviorIIG ^
<II^ _
,II_ `
>II` a
)IIa b
)IIb c
;IIc d
servicesLL 
.LL "
AddDependencyResolversLL +
(LL+ ,
ConfigurationLL, 9
,LL9 :
newLL; >
ICoreModuleLL? J
[LLJ K
]LLK L
{MM 
newNN 

CoreModuleNN 
(NN 
)NN 
}OO 
)OO 
;OO 
servicesSS 
.SS 
AddTransientSS !
<SS! "&
IAuthenticationCoordinatorSS" <
,SS< =%
AuthenticationCoordinatorSS> W
>SSW X
(SSX Y
)SSY Z
;SSZ [
servicesUU 
.UU 
AddSingletonUU !
<UU! " 
ConfigurationManagerUU" 6
>UU6 7
(UU7 8
)UU8 9
;UU9 :
servicesXX 
.XX 
AddTransientXX !
<XX! "
ITokenHelperXX" .
,XX. /
	JwtHelperXX0 9
>XX9 :
(XX: ;
)XX; <
;XX< =
servicesZZ 
.ZZ 
AddTransientZZ !
<ZZ! " 
IMessageBrokerHelperZZ" 6
,ZZ6 7
MqQueueHelperZZ8 E
>ZZE F
(ZZF G
)ZZG H
;ZZH I
services[[ 
.[[ 
AddTransient[[ !
<[[! "
IMessageConsumer[[" 2
,[[2 3
MqConsumerHelper[[4 D
>[[D E
([[E F
)[[F G
;[[G H
services]] 
.]] 
AddAutoMapper]] "
(]]" #
typeof]]# )
(]]) *
Business]]* 2
.]]2 3 
ConfigurationManager]]3 G
)]]G H
)]]H I
;]]I J
FluentValidation`` 
.`` 
ValidatorOptions`` -
.``- .
DisplayNameResolver``. A
=``B C
(``D E
type``E I
,``I J

memberInfo``K U
,``U V

expression``W a
)``a b
=>``c e
{aa 
returnbb 

memberInfobb !
.bb! "
GetCustomAttributebb" 4
<bb4 5
Systembb5 ;
.bb; <
ComponentModelbb< J
.bbJ K
DataAnnotationsbbK Z
.bbZ [
DisplayAttributebb[ k
>bbk l
(bbl m
)bbm n
?bbn o
.bbo p
GetNamebbp w
(bbw x
)bbx y
;bby z
}cc 
;cc 
}dd 	
publicjj 
voidjj (
ConfigureDevelopmentServicesjj 0
(jj0 1
IServiceCollectionjj1 C
servicesjjD L
)jjL M
{kk 	
ConfigureServicesmm 
(mm 
servicesmm &
)mm& '
;mm' (
servicesnn 
.nn 
AddTransientnn !
<nn! "
IUserRepositorynn" 1
,nn1 2
UserRepositorynn3 A
>nnA B
(nnB C
)nnC D
;nnD E
servicesoo 
.oo 
AddTransientoo !
<oo! " 
IUserClaimRepositoryoo" 6
,oo6 7
UserClaimRepositoryoo8 K
>ooK L
(ooL M
)ooM N
;ooN O
servicespp 
.pp 
AddTransientpp !
<pp! "%
IOperationClaimRepositorypp" ;
,pp; <$
OperationClaimRepositorypp= U
>ppU V
(ppV W
)ppW X
;ppX Y
servicesrr 
.rr 
AddDbContextrr !
<rr! "
ProjectDbContextrr" 2
,rr2 3
Fakesrr4 9
.rr9 :
SFwrr: =
.rr= >
SFwInMemoryrr> I
>rrI J
(rrJ K
)rrK L
;rrL M
}tt 	
publiczz 
voidzz &
ConfigureProfilingServiceszz .
(zz. /
IServiceCollectionzz/ A
serviceszzB J
)zzJ K
{{{ 	
ConfigureServices}} 
(}} 
services}} &
)}}& '
;}}' (
services~~ 
.~~ 
AddTransient~~ !
<~~! "
IUserRepository~~" 1
,~~1 2
UserRepository~~3 A
>~~A B
(~~B C
)~~C D
;~~D E
services 
. 
AddTransient !
<! " 
IUserClaimRepository" 6
,6 7
UserClaimRepository8 K
>K L
(L M
)M N
;N O
services
ÄÄ 
.
ÄÄ 
AddTransient
ÄÄ !
<
ÄÄ! "'
IOperationClaimRepository
ÄÄ" ;
,
ÄÄ; <&
OperationClaimRepository
ÄÄ= U
>
ÄÄU V
(
ÄÄV W
)
ÄÄW X
;
ÄÄX Y
services
ÉÉ 
.
ÉÉ 
AddDbContext
ÉÉ !
<
ÉÉ! "
ProjectDbContext
ÉÉ" 2
>
ÉÉ2 3
(
ÉÉ3 4
)
ÉÉ4 5
;
ÉÉ5 6
}
ÖÖ 	
public
ää 
void
ää &
ConfigureStagingServices
ää ,
(
ää, - 
IServiceCollection
ää- ?
services
ää@ H
)
ääH I
{
ãã 	
ConfigureServices
åå 
(
åå 
services
åå &
)
åå& '
;
åå' (
services
çç 
.
çç 
AddTransient
çç !
<
çç! "
IUserRepository
çç" 1
,
çç1 2
UserRepository
çç3 A
>
ççA B
(
ççB C
)
ççC D
;
ççD E
services
éé 
.
éé 
AddTransient
éé !
<
éé! ""
IUserClaimRepository
éé" 6
,
éé6 7!
UserClaimRepository
éé8 K
>
ééK L
(
ééL M
)
ééM N
;
ééN O
services
èè 
.
èè 
AddTransient
èè !
<
èè! "'
IOperationClaimRepository
èè" ;
,
èè; <&
OperationClaimRepository
èè= U
>
èèU V
(
èèV W
)
èèW X
;
èèX Y
services
ëë 
.
ëë 
AddDbContext
ëë !
<
ëë! "
ProjectDbContext
ëë" 2
>
ëë2 3
(
ëë3 4
)
ëë4 5
;
ëë5 6
}
ìì 	
public
ôô 
void
ôô )
ConfigureProductionServices
ôô /
(
ôô/ 0 
IServiceCollection
ôô0 B
services
ôôC K
)
ôôK L
{
öö 	
ConfigureServices
õõ 
(
õõ 
services
õõ &
)
õõ& '
;
õõ' (
services
úú 
.
úú 
AddTransient
úú !
<
úú! "
IUserRepository
úú" 1
,
úú1 2
UserRepository
úú3 A
>
úúA B
(
úúB C
)
úúC D
;
úúD E
services
ùù 
.
ùù 
AddTransient
ùù !
<
ùù! ""
IUserClaimRepository
ùù" 6
,
ùù6 7!
UserClaimRepository
ùù8 K
>
ùùK L
(
ùùL M
)
ùùM N
;
ùùN O
services
ûû 
.
ûû 
AddTransient
ûû !
<
ûû! "'
IOperationClaimRepository
ûû" ;
,
ûû; <&
OperationClaimRepository
ûû= U
>
ûûU V
(
ûûV W
)
ûûW X
;
ûûX Y
services
°° 
.
°° 
AddDbContext
°° !
<
°°! "
ProjectDbContext
°°" 2
>
°°2 3
(
°°3 4
)
°°4 5
;
°°5 6
}
¢¢ 	
public
©© 
void
©©  
ConfigureContainer
©© &
(
©©& '
ContainerBuilder
©©' 7
builder
©©8 ?
)
©©? @
{
™™ 	
builder
´´ 
.
´´ 
RegisterModule
´´ "
(
´´" #
new
´´# &#
AutofacBusinessModule
´´' <
(
´´< =
new
´´= @"
ConfigurationManager
´´A U
(
´´U V
Configuration
´´V c
,
´´c d
hostEnvironment
´´e t
)
´´t u
)
´´u v
)
´´v w
;
´´w x
}
≠≠ 	
}
ØØ 
}∞∞ 
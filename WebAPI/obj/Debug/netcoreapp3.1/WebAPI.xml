<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPI</name>
    </assembly>
    <members>
        <member name="T:WebAPI.Controllers.AuthController">
            <summary>
            Authorization işlemlerini yapar
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.#ctor(MediatR.IMediator)">
            <summary>
            Dependency injection constructor injection ile sağlanır.
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.Login(Business.Handlers.Authorizations.Queries.LoginUser.LoginUserQuery)">
            <summary>
            Kullanıcı Giriş Metodu İşlemlerini Yapar.
            </summary>
            <param name="loginModel"></param>
            <returns></returns>  
        </member>
        <member name="M:WebAPI.Controllers.AuthController.Register(Business.Handlers.Authorizations.Commands.RegisterAuth.RegisterUser.Command)">
            <summary>
             Kullanıcı Kayıt Metodu İşlemlerini yapar.
            </summary>
            <param name="createUser"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.CategoriesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.CategoriesController.#ctor(MediatR.IMediator)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:WebAPI.Controllers.CategoriesController.GetList">
            <summary>
            Kategori Listesini getirir
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.CategoriesController.Add(Business.Handlers.Categories.Commands.CreateCategory.CreateCategoryCommand)">
            <summary>
            Category Ekler.
            </summary>
            <param name="createCategory"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.ProductsController">
            <summary>
            Products Controller
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.ProductsController.#ctor(MediatR.IMediator)">
            <summary>
            CRUD Controller for Products
            </summary>
            private readonly IProductService _productService;
             <summary>
             Service ile Business Katmanı injection yapar.
             </summary>
             <param name="mediator"></param>     
        </member>
        <member name="M:WebAPI.Controllers.ProductsController.GetList">
            <summary>
            Tüm ürünleri listeler
            </summary>
            <remarks>bla bla bla products</remarks>
            <return>Ürün Listesi</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.ProductsController.GetListByCategory(System.Int32)">
            <summary>
            Kategori Id sine göre tüm ürünleri listeler
            </summary>
            <remarks>bla bla bla products</remarks>
            <return>Ürün Listesi</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.ProductsController.GetById(System.Int32)">
            <summary>
            Id sine göre ürün detaylarını getirir.
            </summary>
            <remarks>bla bla bla products</remarks>
            <return>Ürün Listesi</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.ProductsController.Add(Business.Handlers.Products.Commands.CreateProduct.CreateProductCommand)">
            <summary>
            Ürün Ekler.
            </summary>
            <param name="createProduct"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.ProductsController.Update(Business.Handlers.Products.Commands.UpdateProduct.UpdateProductCommand)">
            <summary>
            Ürün Günceller.
            </summary>
            <param name="updateProduct"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.ProductsController.Delete(Business.Handlers.Products.Commands.DeleteProduct.DeleteCategoryCommand)">
            <summary>
            Ürün Siler.
            </summary>
            <param name="deleteProduct"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebAPI.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:WebAPI.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:WebAPI.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
